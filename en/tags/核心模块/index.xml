<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>核心模块 on Luenci</title>
    <link>https://luenci.com/en/tags/%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97/</link>
    <description>Recent content in 核心模块 on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/tags/%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些核心模块的介绍</title>
      <link>https://luenci.com/en/posts/python%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/python%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h2 id=&#34;sys模块&#34;&gt;sys模块&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;模块方法&lt;/th&gt;
          &lt;th&gt;解释说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.argv&lt;/td&gt;
          &lt;td&gt;传递到Python脚本的命令行参数列表，第一个元素是程序本身路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.executable&lt;/td&gt;
          &lt;td&gt;返回Python解释器在当前系统中的绝对路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.exit(arg)&lt;/td&gt;
          &lt;td&gt;程序中间的退出，arg=0为正常退出&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.path&lt;/td&gt;
          &lt;td&gt;返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.platform&lt;/td&gt;
          &lt;td&gt;返回操作系统平台名称，Linux是linux2，Windows是win32&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.stdout.write(str)&lt;/td&gt;
          &lt;td&gt;输出的时候把换行符\n去掉&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;val = sys.stdin.readline()[:-1]&lt;/td&gt;
          &lt;td&gt;拿到的值去掉\n换行符&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;sys.version&lt;/td&gt;
          &lt;td&gt;获取Python解释程序的版本信息&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;os模块&#34;&gt;os模块&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;方法&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;说明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.mkdir()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;创建目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.rmdir()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;删除目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.rename()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;重命名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.remove()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;删除文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.getcwd()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;获取当前工作路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.walk()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;遍历目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.join()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;连接目录与文件名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.split()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;分割文件名与目录&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.abspath()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;获取绝对路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.dirname()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;获取路径&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.basename()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;获取文件名或文件夹名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.splitext()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;分离文件名与扩展名&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.isfile()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;判断给出的路径是否是一个文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;os.path.isdir()&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;判断给出的路径是否是一个目录&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;json模块&#34;&gt;json模块&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="sys模块">sys模块</h2>
<table>
  <thead>
      <tr>
          <th>模块方法</th>
          <th>解释说明</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>sys.argv</td>
          <td>传递到Python脚本的命令行参数列表，第一个元素是程序本身路径</td>
      </tr>
      <tr>
          <td>sys.executable</td>
          <td>返回Python解释器在当前系统中的绝对路径</td>
      </tr>
      <tr>
          <td>sys.exit(arg)</td>
          <td>程序中间的退出，arg=0为正常退出</td>
      </tr>
      <tr>
          <td>sys.path</td>
          <td>返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</td>
      </tr>
      <tr>
          <td>sys.platform</td>
          <td>返回操作系统平台名称，Linux是linux2，Windows是win32</td>
      </tr>
      <tr>
          <td>sys.stdout.write(str)</td>
          <td>输出的时候把换行符\n去掉</td>
      </tr>
      <tr>
          <td>val = sys.stdin.readline()[:-1]</td>
          <td>拿到的值去掉\n换行符</td>
      </tr>
      <tr>
          <td>sys.version</td>
          <td>获取Python解释程序的版本信息</td>
      </tr>
  </tbody>
</table>
<h2 id="os模块">os模块</h2>
<table>
  <thead>
      <tr>
          <th style="text-align: center">方法</th>
          <th style="text-align: center">说明</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: center">os.mkdir()</td>
          <td style="text-align: center">创建目录</td>
      </tr>
      <tr>
          <td style="text-align: center">os.rmdir()</td>
          <td style="text-align: center">删除目录</td>
      </tr>
      <tr>
          <td style="text-align: center">os.rename()</td>
          <td style="text-align: center">重命名</td>
      </tr>
      <tr>
          <td style="text-align: center">os.remove()</td>
          <td style="text-align: center">删除文件</td>
      </tr>
      <tr>
          <td style="text-align: center">os.getcwd()</td>
          <td style="text-align: center">获取当前工作路径</td>
      </tr>
      <tr>
          <td style="text-align: center">os.walk()</td>
          <td style="text-align: center">遍历目录</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.join()</td>
          <td style="text-align: center">连接目录与文件名</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.split()</td>
          <td style="text-align: center">分割文件名与目录</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.abspath()</td>
          <td style="text-align: center">获取绝对路径</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.dirname()</td>
          <td style="text-align: center">获取路径</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.basename()</td>
          <td style="text-align: center">获取文件名或文件夹名</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.splitext()</td>
          <td style="text-align: center">分离文件名与扩展名</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.isfile()</td>
          <td style="text-align: center">判断给出的路径是否是一个文件</td>
      </tr>
      <tr>
          <td style="text-align: center">os.path.isdir()</td>
          <td style="text-align: center">判断给出的路径是否是一个目录</td>
      </tr>
  </tbody>
</table>
<!-- more -->
<h2 id="json模块">json模块</h2>
<ul>
<li>
<p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。</p>
</li>
<li>
<p>数据格式可以简单地理解为<strong>键值对</strong>的集合（A collection of name/value pairs）。不同的语言中，它被理解为对象（object），纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。</p>
</li>
<li>
<p>值的有序列表（An ordered list of values）。在大部分语言中，它被理解为数组（array）。</p>
</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">json</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Pyhton的json模块提供了把<strong>内存中的对象序列化的方法</strong>。</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">json</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 序列化数据</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># f = open(&#39;JsonDemo.txt&#39;, &#39;a&#39;, encoding=&#39;utf-8&#39;)</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># dic = {&#39;name&#39;: &#39;luenci&#39;}</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># tmp = json.dumps(dic)</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># f.write(tmp)</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># f.close()</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 反序列化数据</span>
</span></span><span style="display:flex;"><span>f <span style="color:#ff7b72;font-weight:bold">=</span> open(<span style="color:#a5d6ff">&#39;JsonDemo.txt&#39;</span>, <span style="color:#a5d6ff">&#39;r&#39;</span>, encoding<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#39;utf-8&#39;</span>)
</span></span><span style="display:flex;"><span>res <span style="color:#ff7b72;font-weight:bold">=</span> json<span style="color:#ff7b72;font-weight:bold">.</span>loads(f<span style="color:#ff7b72;font-weight:bold">.</span>read())
</span></span><span style="display:flex;"><span>print(res)
</span></span><span style="display:flex;"><span>print(type(res))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># out</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># {&#39;name&#39;: &#39;luenci&#39;}</span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># &lt;class &#39;dict&#39;&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="jsondumps"><code>json.dumps</code></h3>
<p><code>dump</code>的功能就是把<code>Python</code>对象<code>encode</code>为json对象，一个编码过程。注意<code>json</code>模块提供了<code>json.dumps</code>和<code>json.dump</code>方法，区别是<code>dump</code>直接到文件，而<code>dumps</code>到一个字符串，这里的<code>s</code>可以理解为<code>string</code>。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> [ { <span style="color:#a5d6ff">&#39;a&#39;</span>:<span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>:(<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>), <span style="color:#a5d6ff">&#39;c&#39;</span>:<span style="color:#a5d6ff">3.0</span> } ]
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;DATA:&#39;</span>, repr(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>data_string <span style="color:#ff7b72;font-weight:bold">=</span> json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data)
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;JSON:&#39;</span>, data_string
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span><span style="color:#f85149">DATA:</span> [{<span style="color:#f85149">&#39;a&#39;:</span> <span style="color:#f85149">&#39;A&#39;,</span> <span style="color:#f85149">&#39;c&#39;:</span> <span style="color:#f85149">3.0,</span> <span style="color:#f85149">&#39;b&#39;:</span> <span style="color:#f85149">(2,</span> <span style="color:#f85149">4)</span>}]
</span></span><span style="display:flex;"><span><span style="color:#f85149">JSON:</span> [{<span style="color:#7ee787">&#34;a&#34;</span>: <span style="color:#a5d6ff">&#34;A&#34;</span>, <span style="color:#7ee787">&#34;c&#34;</span>: <span style="color:#a5d6ff">3.0</span>, <span style="color:#7ee787">&#34;b&#34;</span>: [<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>]}]
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看其类型，发现是<code>string</code>对象。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>print type(data)
</span></span><span style="display:flex;"><span>print type(data_string)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>&lt;type <span style="color:#a5d6ff">&#39;list&#39;</span>&gt;
</span></span><span style="display:flex;"><span>&lt;type <span style="color:#a5d6ff">&#39;str&#39;</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="jsondump"><code>json.dump</code></h3>
<p>不仅可以把<code>Python</code>对象编码为<code>string</code>，还可以写入文件。因为我们不能把<code>Python</code>对象直接写入文件，这样会报错<code>TypeError: expected a string or other character buffer object</code>，我们需要将其序列化之后才可以。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> [ { <span style="color:#a5d6ff">&#39;a&#39;</span>:<span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>:(<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>), <span style="color:#a5d6ff">&#39;c&#39;</span>:<span style="color:#a5d6ff">3.0</span> } ]
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">with</span> open(<span style="color:#a5d6ff">&#39;output.json&#39;</span>,<span style="color:#a5d6ff">&#39;w&#39;</span>) <span style="color:#ff7b72">as</span> fp:
</span></span><span style="display:flex;"><span>    json<span style="color:#ff7b72;font-weight:bold">.</span>dump(data,fp)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[{<span style="color:#7ee787">&#34;a&#34;</span>: <span style="color:#a5d6ff">&#34;A&#34;</span>, <span style="color:#7ee787">&#34;c&#34;</span>: <span style="color:#a5d6ff">3.0</span>, <span style="color:#7ee787">&#34;b&#34;</span>: [<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>]}]
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="jsonloads"><code>json.loads</code></h3>
<p>从<code>Python</code>内置对象<code>dump</code>为<code>json</code>对象我们知道如何操作了，那如何从<code>json</code>对象<code>decode</code>解码为<code>Python</code>可以识别的对象呢？是的用<code>json.loads</code>方法，当然这个是基于<code>string</code>的，如果是文件，我们可以用<code>json.load</code>方法。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>decoded_json <span style="color:#ff7b72;font-weight:bold">=</span> json<span style="color:#ff7b72;font-weight:bold">.</span>loads(data_string)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 和之前一样，还是list</span>
</span></span><span style="display:flex;"><span>print type(decoded_json)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>&lt;type <span style="color:#a5d6ff">&#39;list&#39;</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 像访问 data = [ { &#39;a&#39;:&#39;A&#39;, &#39;b&#39;:(2, 4), &#39;c&#39;:3.0 } ]一样</span>
</span></span><span style="display:flex;"><span>print decoded_json[<span style="color:#a5d6ff">0</span>][<span style="color:#a5d6ff">&#39;a&#39;</span>]
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>A
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="jsonload"><code>json.load</code></h3>
<p>可以直接<code>load</code>文件。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">with</span> open(<span style="color:#a5d6ff">&#39;output.json&#39;</span>) <span style="color:#ff7b72">as</span> fp:
</span></span><span style="display:flex;"><span>    print type(fp)
</span></span><span style="display:flex;"><span>    loaded_json <span style="color:#ff7b72;font-weight:bold">=</span> json<span style="color:#ff7b72;font-weight:bold">.</span>load(fp)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>&lt;type <span style="color:#a5d6ff">&#39;file&#39;</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 和之前一样，还是list</span>
</span></span><span style="display:flex;"><span>print type(decoded_json)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>&lt;type <span style="color:#a5d6ff">&#39;list&#39;</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 像访问 data = [ { &#39;a&#39;:&#39;A&#39;, &#39;b&#39;:(2, 4), &#39;c&#39;:3.0 } ]一样</span>
</span></span><span style="display:flex;"><span>print decoded_json[<span style="color:#a5d6ff">0</span>][<span style="color:#a5d6ff">&#39;a&#39;</span>]
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>A
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="数据类型对应">数据类型对应</h3>
<p><code>json</code>和<code>Python</code>对象转换过程中，数据类型不完全一致，有对应。</p>
<table>
  <thead>
      <tr>
          <th>Python</th>
          <th>Json</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>dict</td>
          <td>object</td>
      </tr>
      <tr>
          <td>list,tuple</td>
          <td>array</td>
      </tr>
      <tr>
          <td>str, unicode</td>
          <td>string</td>
      </tr>
      <tr>
          <td>int,long,float</td>
          <td>number</td>
      </tr>
      <tr>
          <td>True</td>
          <td>true</td>
      </tr>
      <tr>
          <td>False</td>
          <td>false</td>
      </tr>
      <tr>
          <td>None</td>
          <td>null</td>
      </tr>
  </tbody>
</table>
<h3 id="jsondumps常用参数"><code>json.dumps</code>常用参数</h3>
<p>一些参数，可以让我们更好地控制输出。常见的比如<code>sort_keys</code>，<code>indent</code>，<code>separators</code>，<code>skipkeys</code>等。</p>
<p><code>sort_keys</code>名字就很清楚了，输出时字典的是按键值排序的，而不是随机的。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> [ { <span style="color:#a5d6ff">&#39;a&#39;</span>:<span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>:(<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>), <span style="color:#a5d6ff">&#39;c&#39;</span>:<span style="color:#a5d6ff">3.0</span> } ]
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;DATA:&#39;</span>, repr(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>unsorted <span style="color:#ff7b72;font-weight:bold">=</span> json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data)
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;JSON:&#39;</span>, json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data)
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;SORT:&#39;</span>, json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data, sort_keys<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#79c0ff">True</span>)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-tsx" data-lang="tsx"><span style="display:flex;"><span>DATA<span style="color:#ff7b72;font-weight:bold">:</span> [{<span style="color:#a5d6ff">&#39;a&#39;</span><span style="color:#ff7b72;font-weight:bold">:</span> <span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;c&#39;</span><span style="color:#ff7b72;font-weight:bold">:</span> <span style="color:#a5d6ff">3.0</span>, <span style="color:#a5d6ff">&#39;b&#39;</span><span style="color:#ff7b72;font-weight:bold">:</span> (<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>)}]
</span></span><span style="display:flex;"><span>JSON<span style="color:#ff7b72;font-weight:bold">:</span> [{<span style="color:#a5d6ff">&#34;a&#34;</span><span style="color:#ff7b72;font-weight:bold">:</span> <span style="color:#a5d6ff">&#34;A&#34;</span>, <span style="color:#a5d6ff">&#34;c&#34;</span><span style="color:#ff7b72;font-weight:bold">:</span> <span style="color:#a5d6ff">3.0</span>, <span style="color:#a5d6ff">&#34;b&#34;</span><span style="color:#ff7b72;font-weight:bold">:</span> [<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>]}]
</span></span><span style="display:flex;"><span>SORT<span style="color:#ff7b72;font-weight:bold">:</span> [{<span style="color:#a5d6ff">&#34;a&#34;</span><span style="color:#ff7b72;font-weight:bold">:</span> <span style="color:#a5d6ff">&#34;A&#34;</span>, <span style="color:#a5d6ff">&#34;b&#34;</span><span style="color:#ff7b72;font-weight:bold">:</span> [<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>], <span style="color:#a5d6ff">&#34;c&#34;</span><span style="color:#ff7b72;font-weight:bold">:</span> <span style="color:#a5d6ff">3.0</span>}]
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>indent</code>就是更个缩进，让我们更好地看清结构。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> [ { <span style="color:#a5d6ff">&#39;a&#39;</span>:<span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>:(<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>), <span style="color:#a5d6ff">&#39;c&#39;</span>:<span style="color:#a5d6ff">3.0</span> } ]
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;DATA:&#39;</span>, repr(data)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;NORMAL:&#39;</span>, json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data, sort_keys<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#79c0ff">True</span>)
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;INDENT:&#39;</span>, json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data, sort_keys<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#79c0ff">True</span>, indent<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">2</span>)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>DATA: <span style="color:#ff7b72;font-weight:bold">[{</span><span style="color:#a5d6ff">&#39;a&#39;</span>: <span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;c&#39;</span>: 3.0, <span style="color:#a5d6ff">&#39;b&#39;</span>: <span style="color:#ff7b72;font-weight:bold">(</span>2, 4<span style="color:#ff7b72;font-weight:bold">)}]</span>
</span></span><span style="display:flex;"><span>NORMAL: <span style="color:#ff7b72;font-weight:bold">[{</span><span style="color:#a5d6ff">&#34;a&#34;</span>: <span style="color:#a5d6ff">&#34;A&#34;</span>, <span style="color:#a5d6ff">&#34;b&#34;</span>: <span style="color:#ff7b72;font-weight:bold">[</span>2, 4<span style="color:#ff7b72;font-weight:bold">]</span>, <span style="color:#a5d6ff">&#34;c&#34;</span>: 3.0<span style="color:#ff7b72;font-weight:bold">}]</span>
</span></span><span style="display:flex;"><span>INDENT: <span style="color:#ff7b72;font-weight:bold">[</span>
</span></span><span style="display:flex;"><span>  <span style="color:#ff7b72;font-weight:bold">{</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a5d6ff">&#34;a&#34;</span>: <span style="color:#a5d6ff">&#34;A&#34;</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#a5d6ff">&#34;b&#34;</span>: <span style="color:#ff7b72;font-weight:bold">[</span>
</span></span><span style="display:flex;"><span>      2, 
</span></span><span style="display:flex;"><span>      <span style="color:#a5d6ff">4</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72;font-weight:bold">]</span>, 
</span></span><span style="display:flex;"><span>    <span style="color:#a5d6ff">&#34;c&#34;</span>: 3.0
</span></span><span style="display:flex;"><span>  <span style="color:#ff7b72;font-weight:bold">}</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>separators</code>是提供分隔符，可以出去白空格，输出更紧凑，数据更小。默认的分隔符是<code>(', ', ': ')</code>，有白空格的。不同的<code>dumps</code>参数，对应文件大小一目了然。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> [ { <span style="color:#a5d6ff">&#39;a&#39;</span>:<span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>:(<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>), <span style="color:#a5d6ff">&#39;c&#39;</span>:<span style="color:#a5d6ff">3.0</span> } ]
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;DATA:&#39;</span>, repr(data)
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;repr(data)             :&#39;</span>, len(repr(data))
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;dumps(data)            :&#39;</span>, len(json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data))
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;dumps(data, indent=2)  :&#39;</span>, len(json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data, indent<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">2</span>))
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;dumps(data, separators):&#39;</span>, len(json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data, separators<span style="color:#ff7b72;font-weight:bold">=</span>(<span style="color:#a5d6ff">&#39;,&#39;</span>,<span style="color:#a5d6ff">&#39;:&#39;</span>)))
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-kotlin" data-lang="kotlin"><span style="display:flex;"><span>DATA: [{<span style="color:#a5d6ff">&#39;a&#39;</span>: <span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;c&#39;</span>: <span style="color:#a5d6ff">3.0</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>: (<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>)}]
</span></span><span style="display:flex;"><span>repr(<span style="color:#ff7b72">data</span>)             : <span style="color:#a5d6ff">35</span>
</span></span><span style="display:flex;"><span>dumps(<span style="color:#ff7b72">data</span>)            : <span style="color:#a5d6ff">35</span>
</span></span><span style="display:flex;"><span>dumps(<span style="color:#ff7b72">data</span>, indent=<span style="color:#a5d6ff">2</span>)  : <span style="color:#a5d6ff">76</span>
</span></span><span style="display:flex;"><span>dumps(<span style="color:#ff7b72">data</span>, separators): <span style="color:#a5d6ff">29</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><code>json</code>需要字典的的键是字符串，否则会抛出<code>ValueError</code>。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> [ { <span style="color:#a5d6ff">&#39;a&#39;</span>:<span style="color:#a5d6ff">&#39;A&#39;</span>, <span style="color:#a5d6ff">&#39;b&#39;</span>:(<span style="color:#a5d6ff">2</span>, <span style="color:#a5d6ff">4</span>), <span style="color:#a5d6ff">&#39;c&#39;</span>:<span style="color:#a5d6ff">3.0</span>, (<span style="color:#a5d6ff">&#39;d&#39;</span>,):<span style="color:#a5d6ff">&#39;D tuple&#39;</span> } ]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;First attempt&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">try</span>:
</span></span><span style="display:flex;"><span>    print json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data)
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">except</span> (<span style="color:#f0883e;font-weight:bold">TypeError</span>, <span style="color:#f0883e;font-weight:bold">ValueError</span>) <span style="color:#ff7b72">as</span> err:
</span></span><span style="display:flex;"><span>    print <span style="color:#a5d6ff">&#39;ERROR:&#39;</span>, err
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print
</span></span><span style="display:flex;"><span>print <span style="color:#a5d6ff">&#39;Second attempt&#39;</span>
</span></span><span style="display:flex;"><span>print json<span style="color:#ff7b72;font-weight:bold">.</span>dumps(data, skipkeys<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#79c0ff">True</span>)
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-csharp" data-lang="csharp"><span style="display:flex;"><span>First attempt
</span></span><span style="display:flex;"><span>ERROR: keys must be a <span style="color:#ff7b72">string</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Second attempt
</span></span><span style="display:flex;"><span>[{&#34;a&#34;: &#34;A&#34;, &#34;c&#34;: 3.0, &#34;b&#34;: [2, 4]}]
</span></span></code></pre></td></tr></table>
</div>
</div><p>转载自：<em>作者：米乐乐果</em>
<em>链接：https://www.jianshu.com/p/e29611244810</em></p>
<h2 id="pickle-模块">pickle 模块</h2>
<ul>
<li>对于类和函数对象，json不能进行序列化，可以使用 pickle 模块来进行相应的操作</li>
<li>pickle 模块只能用于Python中，不同版本的Python可能彼此都不兼容，因此，只能用Pickle保存那些不重要的数据</li>
</ul>
<p>pickle 写入方式：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">pickle</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">foo</span>():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;Hello World!&#39;</span>)
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>data <span style="color:#ff7b72;font-weight:bold">=</span> pickle<span style="color:#ff7b72;font-weight:bold">.</span>dumps(foo)
</span></span><span style="display:flex;"><span>f <span style="color:#ff7b72;font-weight:bold">=</span> open(<span style="color:#a5d6ff">&#39;test1&#39;</span>,<span style="color:#a5d6ff">&#39;wb&#39;</span>)
</span></span><span style="display:flex;"><span>f<span style="color:#ff7b72;font-weight:bold">.</span>write(data)
</span></span><span style="display:flex;"><span>f<span style="color:#ff7b72;font-weight:bold">.</span>close()
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>pickle 的读取方式与 json 模块一致，同为 dump ，dumps 函数</li>
</ul>
<h2 id="shelve-模块">shelve 模块</h2>
<ul>
<li>shelve 模块是一个简单的数据存储方案，类似key-value数据库，可以很方便的保存python对象，其内部是通过pickle协议来实现数据序列化。</li>
<li>shelve 使用方式：</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">shelve</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">with</span> shelve<span style="color:#ff7b72;font-weight:bold">.</span>open(<span style="color:#a5d6ff">&#34;shelve_test&#34;</span>) <span style="color:#ff7b72">as</span> f:
</span></span><span style="display:flex;"><span>    f[<span style="color:#a5d6ff">&#34;name&#34;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> <span style="color:#a5d6ff">&#39;alex&#39;</span>
</span></span><span style="display:flex;"><span>    f[<span style="color:#a5d6ff">&#34;age&#34;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> <span style="color:#a5d6ff">&#39;25&#39;</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 这里直接保存到了文件中，生成了3个文件shelve_test.bak,shelve_test.dat,shelve_test.dir</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">with</span> shelve<span style="color:#ff7b72;font-weight:bold">.</span>open(<span style="color:#a5d6ff">&#39;shelve_test&#39;</span>) <span style="color:#ff7b72">as</span> f:  <span style="color:#8b949e;font-style:italic"># 只使用shelvefile名字即可</span>
</span></span><span style="display:flex;"><span>    print(f[<span style="color:#a5d6ff">&#34;name&#34;</span>])
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> key, value <span style="color:#ff7b72;font-weight:bold">in</span> f<span style="color:#ff7b72;font-weight:bold">.</span>items():
</span></span><span style="display:flex;"><span>        print(key, <span style="color:#a5d6ff">&#39;: &#39;</span>, value)
</span></span><span style="display:flex;"><span> <span style="color:#ff7b72;font-weight:bold">&gt;&gt;&gt;</span> alex
</span></span><span style="display:flex;"><span>     age :  <span style="color:#a5d6ff">25</span>
</span></span><span style="display:flex;"><span>     name :  alex
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="logging模块">logging模块</h2>
<ul>
<li>
<p><strong>logging模块是Python内置的标准模块，主要用于输出运行日志，可以设置输出日志的等级、日志保存路径、日志文件回滚等；相比print，具备如下优点：</strong></p>
<ul>
<li>可以通过设置不同的日志等级，在release版本中只输出重要信息，而不必显示大量的调试信息；</li>
<li>print将所有信息都输出到标准输出中，严重影响开发者从标准输出中查看其它数据；logging则可以由开发者决定将信息输出到什么地方，以及怎么输出</li>
</ul>
</li>
<li>
<p><code>basicConfig </code>配置了 level 信息和 format 信息</p>
<ul>
<li>
<p><code>level </code>配置为 INFO 信息，即只输出 INFO 级别的信息</p>
</li>
<li>
<p><code>filename</code>：即日志输出的文件名，如果指定了这个信息之后，实际上会启用 FileHandler，而不再是 StreamHandler，这样日志信息便会输出到文件中了。</p>
</li>
<li>
<p><code>filemode</code>：这个是指定日志文件的写入方式，有两种形式，一种是 w，一种是 a，分别代表清除后写入和追加写入。</p>
</li>
<li>
<p><code>format=</code>：指定了 format 格式的字符串，包括 asctime运行时间 name模块名称、levelname（日志级别）message （日志内容）</p>
</li>
<li>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(levelno)s<span style="color:#f85149">：</span>打印日志级别的数值<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(levelname)s<span style="color:#f85149">：</span>打印日志级别的名称<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(pathname)s<span style="color:#f85149">：</span>打印当前执行程序的路径<span style="color:#f85149">，</span>其实就是sys<span style="color:#ff7b72;font-weight:bold">.</span>argv[<span style="color:#a5d6ff">0</span>]<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(filename)s<span style="color:#f85149">：</span>打印当前执行程序名<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(funcName)s<span style="color:#f85149">：</span>打印日志的当前函数<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(lineno)d<span style="color:#f85149">：</span>打印日志的当前行号<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(asctime)s<span style="color:#f85149">：</span>打印日志的时间<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(thread)d<span style="color:#f85149">：</span>打印线程ID<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(threadName)s<span style="color:#f85149">：</span>打印线程名称<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(process)d<span style="color:#f85149">：</span>打印进程ID<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(processName)s<span style="color:#f85149">：</span>打印线程名称<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(module)s<span style="color:#f85149">：</span>打印模块名称<span style="color:#f85149">。</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">%</span>(message)s<span style="color:#f85149">：</span>打印日志信息<span style="color:#f85149">。</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>datefmt</code>：指定时间的输出格式。</p>
</li>
<li>
<p><code>logging.setLevel</code> :设定日志级别，只有大于或等于这个级别才输出</p>
<ul>
<li><code>DEBUG</code> 级别0</li>
</ul>
</li>
<li>
<p><code>INFO</code>级别1</p>
<ul>
<li><code>WARNING</code>级别2</li>
</ul>
</li>
<li>
<p><code>ERROR</code>级别3</p>
</li>
<li>
<p><code>CRITICAL</code>级别4</p>
</li>
<li>
<p><code>style</code>：如果 format 参数指定了，这个参数就可以指定格式化时的占位符风格，如 %、{、$ 等。</p>
</li>
<li>
<p><code>level</code>：指定日志输出的类别，程序会输出大于等于此级别的信息。</p>
</li>
<li>
<p><code>stream</code>：在没有指定 <code>filename</code> 的时候会默认使用<code> StreamHandler</code>，这时 <code>stream</code> 可以指定初始化的文件流。指定将日志的输出流，可以指定输出到<code>sys.stderr</code>，<code>sys.stdout</code>或者文件，默认输出到<code>sys.stderr</code>，当<code>stream</code>和<code>filename</code>同时指定时，<code>stream</code>被忽略；</p>
</li>
<li>
<p><code>handlers</code>：可以指定日志处理时所使用的 Handlers，必须是可迭代的。</p>
</li>
</ul>
</li>
</ul>
<h2 id="configparse模块"><code>configparse</code>模块</h2>
<ul>
<li>
<p>读取和写入类似字典操作</p>
</li>
<li>
<p><code>read(filename)</code>      直接读取文件内容</p>
</li>
<li>
<p><code>get(section, option)</code> 获取<code>section</code> 下具体某一配置项的值(返回的是字符串)</p>
</li>
<li>
<p><code>sections()</code> 得到所有的section，并以列表的形式返回</p>
</li>
<li>
<p><code>options(section)</code>    得到该section的所有option</p>
</li>
<li>
<p><code>items(section)</code> 键值对的形式 得到该section的所有option</p>
</li>
<li>
<p>写入配置</p>
</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">configparser</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>config <span style="color:#ff7b72;font-weight:bold">=</span> configparser<span style="color:#ff7b72;font-weight:bold">.</span>ConfigParser()
</span></span><span style="display:flex;"><span>config[<span style="color:#a5d6ff">&#39;DEFAULT&#39;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> {<span style="color:#a5d6ff">&#39;serveraliveinterval&#39;</span> : <span style="color:#a5d6ff">&#39;4&#39;</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#a5d6ff">&#39;compression&#39;</span> : <span style="color:#a5d6ff">&#39;yes&#39;</span>,
</span></span><span style="display:flex;"><span>                    <span style="color:#a5d6ff">&#39;compressionlevel&#39;</span> : <span style="color:#a5d6ff">&#39;9&#39;</span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>config[<span style="color:#a5d6ff">&#39;bitbucket&#39;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> {}
</span></span><span style="display:flex;"><span>config[<span style="color:#a5d6ff">&#39;bitbucket&#39;</span>][<span style="color:#a5d6ff">&#39;user&#39;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> <span style="color:#a5d6ff">&#39;luenci&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>config[<span style="color:#a5d6ff">&#39;weightsecrect&#39;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> {}
</span></span><span style="display:flex;"><span>weightsecrect <span style="color:#ff7b72;font-weight:bold">=</span> config[<span style="color:#a5d6ff">&#39;weightsecrect&#39;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>weightsecrect[<span style="color:#a5d6ff">&#39;port&#39;</span>] <span style="color:#ff7b72;font-weight:bold">=</span> <span style="color:#a5d6ff">&#39;22&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">with</span> open(<span style="color:#a5d6ff">&#39;example.ini&#39;</span>, <span style="color:#a5d6ff">&#39;w&#39;</span>) <span style="color:#ff7b72">as</span> f:
</span></span><span style="display:flex;"><span>   config<span style="color:#ff7b72;font-weight:bold">.</span>write(f)
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>读取配置文件</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">configparser</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>config <span style="color:#ff7b72;font-weight:bold">=</span> configparser<span style="color:#ff7b72;font-weight:bold">.</span>ConfigParser()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 读取配置文件</span>
</span></span><span style="display:flex;"><span>config<span style="color:#ff7b72;font-weight:bold">.</span>read(<span style="color:#a5d6ff">&#39;example.ini&#39;</span>)
</span></span><span style="display:flex;"><span>print(config<span style="color:#ff7b72;font-weight:bold">.</span>sections())
</span></span><span style="display:flex;"><span>print(config<span style="color:#ff7b72;font-weight:bold">.</span>options(<span style="color:#a5d6ff">&#39;bitbucket&#39;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">for</span> key <span style="color:#ff7b72;font-weight:bold">in</span> config[<span style="color:#a5d6ff">&#39;DEFAULT&#39;</span>]<span style="color:#ff7b72;font-weight:bold">.</span>values():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;</span><span style="color:#a5d6ff">%s%s</span><span style="color:#a5d6ff">&#34;</span><span style="color:#ff7b72;font-weight:bold">%</span>(key,type(key)))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>out<span style="color:#f85149">：</span>
</span></span><span style="display:flex;"><span>[<span style="color:#a5d6ff">&#39;bitbucket&#39;</span>, <span style="color:#a5d6ff">&#39;weightsecrect&#39;</span>]
</span></span><span style="display:flex;"><span>[<span style="color:#a5d6ff">&#39;user&#39;</span>, <span style="color:#a5d6ff">&#39;serveraliveinterval&#39;</span>, <span style="color:#a5d6ff">&#39;compression&#39;</span>, <span style="color:#a5d6ff">&#39;compressionlevel&#39;</span>]
</span></span><span style="display:flex;"><span><span style="color:#a5d6ff">4</span><span style="color:#ff7b72;font-weight:bold">&lt;</span><span style="color:#ff7b72">class</span> <span style="color:#f85149">&#39;</span><span style="color:#f0883e;font-weight:bold">str</span><span style="color:#a5d6ff">&#39;&gt;</span>
</span></span><span style="display:flex;"><span>yes<span style="color:#ff7b72;font-weight:bold">&lt;</span><span style="color:#ff7b72">class</span> <span style="color:#f85149">&#39;</span><span style="color:#f0883e;font-weight:bold">str</span><span style="color:#a5d6ff">&#39;&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#a5d6ff">9</span><span style="color:#ff7b72;font-weight:bold">&lt;</span><span style="color:#ff7b72">class</span> <span style="color:#f85149">&#39;</span><span style="color:#f0883e;font-weight:bold">str</span><span style="color:#a5d6ff">&#39;&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="操作函数">操作函数</h3>
<ul>
<li><code>add_section(section)</code>   添加一个新的section</li>
<li><code>set(section, option, value)</code> 对section中添加 option 和 value</li>
<li><code>remove_section(section)</code> 删除某个 section</li>
<li><code>remove_option(section, option)</code>  删除某个 section 下的 option</li>
<li><code>write()</code> 将设置的新的 section 和 option 写到文件中</li>
</ul>
<h3 id="configparse支持的数据类型">configparse支持的数据类型</h3>
<ul>
<li>一般情况下，configpaser类是无法识别配置文件中的value的数据类型的，它总是以字符串的形式来存储这些类型，所以当涉及到<code>int</code> <code>float</code>等类型的时候就需要我们自己对它进行转换</li>
<li>configparser 为我们提供了<code>getboolean() getint() getfloat()</code>方法用来对读对应类型的配置
<ul>
<li>其中getboolean方法可以识别 <code>'yes'/'no', 'on'/'off', 'true'/'false' and '1'/'0'</code>等数据并转换为布尔值</li>
</ul>
</li>
</ul>
<h2 id="hashlib模块"><code>hashlib</code>模块</h2>
<ul>
<li>用于加密有关的操作，主要有SHA1，SHA224，SHA256，SHA384，SHA512，MD5算法。替代了在python3中已废弃了md5和sha模块。</li>
<li>md5加密</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">hashlib</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>p <span style="color:#ff7b72;font-weight:bold">=</span> hashlib<span style="color:#ff7b72;font-weight:bold">.</span>md5()
</span></span><span style="display:flex;"><span>p<span style="color:#ff7b72;font-weight:bold">.</span>update(<span style="color:#a5d6ff">&#39;12345&#39;</span><span style="color:#ff7b72;font-weight:bold">.</span>encode(<span style="color:#a5d6ff">&#39;utf-8&#39;</span>))
</span></span><span style="display:flex;"><span>print(p<span style="color:#ff7b72;font-weight:bold">.</span>hexdigest())
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>sha1加密</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>p <span style="color:#ff7b72;font-weight:bold">=</span> hashlib<span style="color:#ff7b72;font-weight:bold">.</span>sha1()
</span></span><span style="display:flex;"><span>p<span style="color:#ff7b72;font-weight:bold">.</span>update(<span style="color:#a5d6ff">&#39;12345&#39;</span><span style="color:#ff7b72;font-weight:bold">.</span>encode(<span style="color:#a5d6ff">&#39;utf-8&#39;</span>))
</span></span><span style="display:flex;"><span>print(p<span style="color:#ff7b72;font-weight:bold">.</span>hexdigest())
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>以上加密算法虽然依然非常厉害，但时候存在缺陷，即：通过撞库可以反解。所以，有必要对加密算法中添加自定义key再来做加密。</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">hashlib</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 加盐</span>
</span></span><span style="display:flex;"><span>p <span style="color:#ff7b72;font-weight:bold">=</span> hashlib<span style="color:#ff7b72;font-weight:bold">.</span>md5(<span style="color:#a5d6ff">&#39;password&#39;</span><span style="color:#ff7b72;font-weight:bold">.</span>encode(<span style="color:#a5d6ff">&#39;utf-8&#39;</span>))
</span></span><span style="display:flex;"><span>p<span style="color:#ff7b72;font-weight:bold">.</span>update(<span style="color:#a5d6ff">&#39;12345&#39;</span><span style="color:#ff7b72;font-weight:bold">.</span>encode(<span style="color:#a5d6ff">&#39;utf-8&#39;</span>))
</span></span><span style="display:flex;"><span>print(p<span style="color:#ff7b72;font-weight:bold">.</span>hexdigest())
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
  </channel>
</rss>
