<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python编译器 on Luenci</title>
    <link>https://luenci.com/en/tags/python%E7%BC%96%E8%AF%91%E5%99%A8/</link>
    <description>Recent content in Python编译器 on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/tags/python%E7%BC%96%E8%AF%91%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python解释器介绍</title>
      <link>https://luenci.com/en/posts/python%E8%A7%A3%E9%87%8A%E5%99%A8%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/python%E8%A7%A3%E9%87%8A%E5%99%A8%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h1 id=&#34;cpython&#34;&gt;CPython&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;当我们从&lt;a href=&#34;https://www.python.org/&#34;&gt;Python官方网站&lt;/a&gt;下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行&lt;code&gt;python&lt;/code&gt;就是启动CPython解释器。&lt;/li&gt;
&lt;/ul&gt;</description>
      <content:encoded><![CDATA[<h1 id="cpython">CPython</h1>
<ul>
<li>当我们从<a href="https://www.python.org/">Python官方网站</a>下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。在命令行下运行<code>python</code>就是启动CPython解释器。</li>
</ul>
<h1 id="ipython">IPython</h1>
<ul>
<li>
<p>IPython是基于CPython之上的一个交互式解释器，也就是说，IPython只是在交互方式上有所增强，但是执行Python代码的功能和CPython是完全一样的。好比很多国产浏览器虽然外观不同，但内核其实都是调用了IE。</p>
</li>
<li>
<p>CPython用<code>&gt;&gt;&gt;</code>作为提示符，而IPython用<code>In [序号]:</code>作为提示符。</p>
</li>
</ul>
<h1 id="jpython">Jpython</h1>
<ul>
<li>Jython是运行在Java平台上的Python解释器，可以直接把Python代码编译成Java字节码执行。</li>
</ul>
<h1 id="pypy">PyPy</h1>
<ul>
<li>
<p>PyPy是另一个Python解释器，它的目标是执行速度。PyPy采用<a href="http://en.wikipedia.org/wiki/Just-in-time_compilation">JIT技术</a>（just-in-time compiler 即时编译器，通俗解释就是边编译边执行），对Python代码进行动态编译（注意不是解释），所以可以显著提高Python代码的执行速度。</p>
</li>
<li>
<p>绝大部分Python代码都可以在PyPy下运行，但是PyPy和CPython有一些是不同的，这就导致相同的Python代码在两种解释器下执行可能会有不同的结果。如果你的代码要放到PyPy下执行，就需要了解<a href="http://pypy.readthedocs.org/en/latest/cpython_differences.html">PyPy和CPython的不同点</a>。、</p>
</li>
</ul>
<h1 id="ironpython">IronPython</h1>
<ul>
<li>IronPython和Jython类似，只不过IronPython是运行在微软.Net平台上的Python解释器，可以直接把Python代码编译成.Net的字节码。</li>
</ul>]]></content:encoded>
    </item>
  </channel>
</rss>
