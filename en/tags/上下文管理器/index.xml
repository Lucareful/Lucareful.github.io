<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>上下文管理器 on Luenci</title>
    <link>https://luenci.com/en/tags/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/</link>
    <description>Recent content in 上下文管理器 on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/tags/%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python 中的上下文管理器</title>
      <link>https://luenci.com/en/posts/python-%E4%B8%AD%E7%9A%84%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/python-%E4%B8%AD%E7%9A%84%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86%E5%99%A8/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;with&lt;/code&gt; 这个关键字，对于每一学习Python的人，都不会陌生。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;操作文本对象的时候，我们用 &lt;code&gt;with open&lt;/code&gt; ，这就是一个上下文管理的例子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#ff7b72&#34;&gt;as&lt;/span&gt; f:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print f&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;.&lt;/span&gt;readlines()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;上下文管理器概念&#34;&gt;上下文管理器概念&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;基本语法&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;with&lt;/span&gt; EXPR &lt;span style=&#34;color:#ff7b72&#34;&gt;as&lt;/span&gt; VAR:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BLOCK
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;几个概念&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;1.&lt;/span&gt; 上下文表达式&lt;span style=&#34;color:#f85149&#34;&gt;：&lt;/span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#ff7b72&#34;&gt;as&lt;/span&gt; f:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;2.&lt;/span&gt; 上下文管理器&lt;span style=&#34;color:#f85149&#34;&gt;：&lt;/span&gt;open(&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;test.txt&amp;#39;&lt;/span&gt;)	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;3.&lt;/span&gt; f不是上下文管理器&lt;span style=&#34;color:#f85149&#34;&gt;，&lt;/span&gt;应该是资源对象&lt;span style=&#34;color:#f85149&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      <content:encoded><![CDATA[<ul>
<li><code>with</code> 这个关键字，对于每一学习Python的人，都不会陌生。</li>
</ul>
<p>操作文本对象的时候，我们用 <code>with open</code> ，这就是一个上下文管理的例子。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">with</span> open(<span style="color:#a5d6ff">&#39;test.txt&#39;</span>) <span style="color:#ff7b72">as</span> f:
</span></span><span style="display:flex;"><span>    print f<span style="color:#ff7b72;font-weight:bold">.</span>readlines()
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="上下文管理器概念">上下文管理器概念</h2>
<p><strong>基本语法</strong></p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">with</span> EXPR <span style="color:#ff7b72">as</span> VAR:
</span></span><span style="display:flex;"><span>    BLOCK
</span></span></code></pre></td></tr></table>
</div>
</div><p>几个概念</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#a5d6ff">1.</span> 上下文表达式<span style="color:#f85149">：</span><span style="color:#ff7b72">with</span> open(<span style="color:#a5d6ff">&#39;test.txt&#39;</span>) <span style="color:#ff7b72">as</span> f:
</span></span><span style="display:flex;"><span><span style="color:#a5d6ff">2.</span> 上下文管理器<span style="color:#f85149">：</span>open(<span style="color:#a5d6ff">&#39;test.txt&#39;</span>)	
</span></span><span style="display:flex;"><span><span style="color:#a5d6ff">3.</span> f不是上下文管理器<span style="color:#f85149">，</span>应该是资源对象<span style="color:#f85149">。</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="实现下文管理器">实现下文管理器</h2>
<p>要自己实现这样一个上下文管理，要先知道上下文管理协议。</p>
<ul>
<li>简单点说，就是在一个类里，实现了<code>__enter__</code>和<code>__exit__</code>的方法，这个类的实例就是一个上下文管理器。</li>
</ul>
<p>例如这个示例：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">class</span> <span style="color:#f0883e;font-weight:bold">Resource</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">def</span> __enter__(self):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#39;===connect to resource===&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff7b72">return</span> self
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">def</span> __exit__(self, exc_type, exc_val, exc_tb):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#39;===close resource connection===&#39;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">operate</span>(self):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#39;===in operation===&#39;</span>)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">with</span> Resource() <span style="color:#ff7b72">as</span> res:
</span></span><span style="display:flex;"><span>    res<span style="color:#ff7b72;font-weight:bold">.</span>operate()
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们执行一下，通过日志的打印顺序。可以知道其执行过程。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">===</span>connect to resource<span style="color:#ff7b72;font-weight:bold">===</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">===</span><span style="color:#ff7b72;font-weight:bold">in</span> operation<span style="color:#ff7b72;font-weight:bold">===</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">===</span>close resource connection<span style="color:#ff7b72;font-weight:bold">===</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>从这个示例可以很明显的看出，在编写代码时，可以将资源的连接或者获取放在<code>__enter__</code>中，而将资源的关闭写在<code>__exit__</code> 中。</li>
</ul>
<h2 id="上下文管理器作用">上下文管理器作用</h2>
<ul>
<li>
<ol>
<li>可以以一种更加优雅的方式，操作（创建/获取/释放）资源，如文件操作、数据库连接；</li>
</ol>
</li>
<li>
<ol start="2">
<li>可以以一种更加优雅的方式，处理异常；</li>
</ol>
</li>
</ul>
<p>第一种，我们上面已经以资源的连接为例介绍了。</p>
<p>而第二种，会被大多数人所忽略。这里会重点讲一下。</p>
<p>大家都知道，处理异常，通常都是使用 <code>try...execept..</code> 来捕获处理的。这样做一个不好的地方是，在代码的主逻辑里，会有大量的异常处理代理，这会很大的影响我们的可读性。</p>
<p>好一点的做法呢，可以使用 <code>with</code> 将异常的处理隐藏起来。</p>
<p>仍然是以上面的代码为例，我们将<code>I/O</code> 这个一定会抛出异常的代码写在 <code>operate</code> 里</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">class</span> <span style="color:#f0883e;font-weight:bold">Resource</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">def</span> __enter__(self):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#39;===connect to resource===&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff7b72">return</span> self
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">def</span> __exit__(self, exc_type, exc_val, exc_tb):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#39;===close resource connection===&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#ff7b72">return</span> <span style="color:#79c0ff">True</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">operate</span>(self):
</span></span><span style="display:flex;"><span>        I<span style="color:#ff7b72;font-weight:bold">/</span>O
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">with</span> Resource() <span style="color:#ff7b72">as</span> res:
</span></span><span style="display:flex;"><span>    res<span style="color:#ff7b72;font-weight:bold">.</span>operate()
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行一下，惊奇地发现，居然不会报错。</p>
<p>这就是上下文管理协议的一个强大之处，异常可以在<code>__exit__</code> 进行捕获并由你自己决定如何处理，是抛出呢还是在这里就解决了。在<code>__exit__</code> 里返回 <code>True</code>（没有return 就默认为 return False），就相当于告诉 Python解释器，这个异常我们已经捕获了，不需要再往外抛了。</p>
<p>在 写<code>__exit__</code> 函数时，需要注意的事，它必须要有这三个参数：</p>
<ul>
<li><code>exc_type</code>：异常类型</li>
<li><code>exc_val</code>：异常值</li>
<li><code>exc_tb</code>：异常的错误栈信息</li>
</ul>
<p>当主逻辑代码没有报异常时，这三个参数将都为None。</p>
<h2 id="常见的异常">常见的异常</h2>
<ul>
<li>异常即是一个事件，该事件会在程序执行过程中发生，影响了程序的正常执行。 一般情况下，在Python无法正常处理程序时就会发生一个异常。 异常是Python对象，表示一个错误。 当Python脚本发生异常时我们需要捕获处理它，否则程序会终止执行。 python的标准异常可以在<a href="https://docs.python.org/3/library/exceptions.html?highlight=exception">官网文档</a>中查看,常用的如下:</li>
</ul>
<table>
  <thead>
      <tr>
          <th>异常名称</th>
          <th>描述</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><code>SystemExit</code></td>
          <td>解释器请求退出</td>
      </tr>
      <tr>
          <td><code>KeyboardInterrupt</code></td>
          <td>用户中断执行(通常是输入^C)</td>
      </tr>
      <tr>
          <td><code>Exception</code></td>
          <td>常规错误的基类</td>
      </tr>
      <tr>
          <td><code>SweightIteration</code></td>
          <td>迭代器没有更多的值</td>
      </tr>
      <tr>
          <td><code>GeneratorExit</code></td>
          <td>生成器(generator)发生异常来通知退出</td>
      </tr>
      <tr>
          <td><code>StandardError</code></td>
          <td>所有的内建标准异常的基类</td>
      </tr>
      <tr>
          <td><code>ArithmeticError</code></td>
          <td>所有数值计算错误的基类</td>
      </tr>
      <tr>
          <td><code>FloatingPointError</code></td>
          <td>浮点计算错误</td>
      </tr>
      <tr>
          <td><code>OverflowError</code></td>
          <td>数值运算超出最大限制</td>
      </tr>
      <tr>
          <td><code>ZeroDivisionError</code></td>
          <td>除(或取模)零 (所有数据类型)</td>
      </tr>
      <tr>
          <td><code>AssertionError</code></td>
          <td>断言语句失败</td>
      </tr>
      <tr>
          <td><code>AttributeError</code></td>
          <td>对象没有这个属性</td>
      </tr>
      <tr>
          <td><code>EOFError</code></td>
          <td>没有内建输入,到达EOF 标记</td>
      </tr>
      <tr>
          <td><code>EnvironmentError</code></td>
          <td>操作系统错误的基类</td>
      </tr>
      <tr>
          <td><code>IOError</code></td>
          <td>输入/输出操作失败</td>
      </tr>
      <tr>
          <td><code>OSError</code></td>
          <td>操作系统错误</td>
      </tr>
      <tr>
          <td><code>WindowsError</code></td>
          <td>系统调用失败</td>
      </tr>
      <tr>
          <td><code>ImportError</code></td>
          <td>导入模块/对象失败</td>
      </tr>
      <tr>
          <td><code>LookupError</code></td>
          <td>无效数据查询的基类</td>
      </tr>
      <tr>
          <td><code>IndexError</code></td>
          <td>序列中没有此索引(index)</td>
      </tr>
      <tr>
          <td><code>KeyError</code></td>
          <td>映射中没有这个键</td>
      </tr>
      <tr>
          <td><code>MemoryError</code></td>
          <td>内存溢出错误(对于Python 解释器不是致命的)</td>
      </tr>
      <tr>
          <td><code>NameError</code></td>
          <td>未声明/初始化对象 (没有属性)</td>
      </tr>
      <tr>
          <td><code>UnboundLocalError</code></td>
          <td>访问未初始化的本地变量</td>
      </tr>
      <tr>
          <td><code>ReferenceError</code></td>
          <td>弱引用(Weak reference)试图访问已经垃圾回收了的对象</td>
      </tr>
      <tr>
          <td><code>RuntimeError</code></td>
          <td>一般的运行时错误</td>
      </tr>
      <tr>
          <td><code>NotImplementedError</code></td>
          <td>尚未实现的方法</td>
      </tr>
      <tr>
          <td><code>SyntaxError</code></td>
          <td>Python 语法错误</td>
      </tr>
      <tr>
          <td><code>IndentationError</code></td>
          <td>缩进错误</td>
      </tr>
      <tr>
          <td><code>TabError</code></td>
          <td>Tab 和空格混用</td>
      </tr>
      <tr>
          <td><code>SystemError</code></td>
          <td>一般的解释器系统错误</td>
      </tr>
      <tr>
          <td><code>TypeError</code></td>
          <td>对类型无效的操作</td>
      </tr>
      <tr>
          <td><code>ValueError</code></td>
          <td>传入无效的参数</td>
      </tr>
      <tr>
          <td><code>UnicodeError</code></td>
          <td>Unicode 相关的错误</td>
      </tr>
      <tr>
          <td><code>UnicodeDecodeError</code></td>
          <td>Unicode 解码时的错误</td>
      </tr>
      <tr>
          <td><code>UnicodeEncodeError</code></td>
          <td>Unicode 编码时错误</td>
      </tr>
      <tr>
          <td><code>UnicodeTranslateError</code></td>
          <td>Unicode 转换时错误</td>
      </tr>
      <tr>
          <td><code>Warning</code></td>
          <td>警告的基类</td>
      </tr>
      <tr>
          <td><code>DeprecationWarning</code></td>
          <td>关于被弃用警告</td>
      </tr>
      <tr>
          <td><code>FutureWarning</code></td>
          <td>关于构造将来语义会有改变的警告</td>
      </tr>
      <tr>
          <td><code>OverflowWarning</code></td>
          <td>旧的关于自动提升为长整型(long)的警告</td>
      </tr>
      <tr>
          <td><code>PendingDeprecationWarning</code></td>
          <td>关于特性将会被废弃的警告</td>
      </tr>
      <tr>
          <td><code>RuntimeWarning</code></td>
          <td>可疑的运行时行为(runtime behavior)的警告</td>
      </tr>
      <tr>
          <td><code>SyntaxWarning</code></td>
          <td>可疑的语法的警告</td>
      </tr>
      <tr>
          <td><code>UserWarning</code></td>
          <td>用户代码生成的警告</td>
      </tr>
  </tbody>
</table>]]></content:encoded>
    </item>
  </channel>
</rss>
