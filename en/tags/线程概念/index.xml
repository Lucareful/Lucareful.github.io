<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>线程概念 on Luenci</title>
    <link>https://luenci.com/en/tags/%E7%BA%BF%E7%A8%8B%E6%A6%82%E5%BF%B5/</link>
    <description>Recent content in 线程概念 on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/tags/%E7%BA%BF%E7%A8%8B%E6%A6%82%E5%BF%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python多线程，并发和锁</title>
      <link>https://luenci.com/en/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>&lt;h1 id=&#34;多任务&#34;&gt;多任务&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;同一个时间有多个任务在执行&lt;/li&gt;
&lt;li&gt;python程序默认是单任务&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;线程&#34;&gt;线程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;线程概念
&lt;ul&gt;
&lt;li&gt;线程，可简单理解为是程序执行的一条分支，也是程序执行流的最小单元。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程是被系统独立调度和分底的基本单位&lt;/strong&gt;，线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程为其它线程共享进程所拥有的全部资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i.postimg.cc/C1xWN60d/image-20191113140837489.png&#34; alt=&#34;image-20191113140837489&#34;  /&gt;
&lt;/p&gt;
&lt;h2 id=&#34;主线程&#34;&gt;主线程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;当一个程序后动时，就有一个进程被操作系统（OS）创建，与此同时一个线程也立刻运行，该线程通常叫做程序的主线程，简而言之；程序后动就会创建一个主线程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy主线程的重要性有两方面：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1）是产生其他子线程的线程；&lt;/p&gt;
&lt;p&gt;2）通常它必须最后完成执行比如执行各种关闭动作·&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
      <content:encoded><![CDATA[<h1 id="多任务">多任务</h1>
<ul>
<li>同一个时间有多个任务在执行</li>
<li>python程序默认是单任务</li>
</ul>
<h1 id="线程">线程</h1>
<ul>
<li>线程概念
<ul>
<li>线程，可简单理解为是程序执行的一条分支，也是程序执行流的最小单元。</li>
<li><strong>线程是被系统独立调度和分底的基本单位</strong>，线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程为其它线程共享进程所拥有的全部资源。</li>
</ul>
</li>
</ul>
<p><img loading="lazy" src="https://i.postimg.cc/C1xWN60d/image-20191113140837489.png" alt="image-20191113140837489"  />
</p>
<h2 id="主线程">主线程</h2>
<ul>
<li>
<p>当一个程序后动时，就有一个进程被操作系统（OS）创建，与此同时一个线程也立刻运行，该线程通常叫做程序的主线程，简而言之；程序后动就会创建一个主线程。</p>
</li>
<li>
<p>Copy主线程的重要性有两方面：</p>
<blockquote>
<p>1）是产生其他子线程的线程；</p>
<p>2）通常它必须最后完成执行比如执行各种关闭动作·</p></blockquote>
</li>
</ul>
<h2 id="子线程">子线程</h2>
<ul>
<li>可以看做是程序执行的一条分支，当子线程后动后会和主线程一起同时执行</li>
<li>主线程会等待所以子线程结束之后再结束</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">35
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">36
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">from</span> <span style="color:#ff7b72">time</span> <span style="color:#ff7b72">import</span> <span style="color:#ff7b72;font-weight:bold">*</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">loop0</span>():
</span></span><span style="display:flex;"><span>	print(<span style="color:#a5d6ff">&#39;start loop0 at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>	sleep(<span style="color:#a5d6ff">4</span>)
</span></span><span style="display:flex;"><span>	print(<span style="color:#a5d6ff">&#39;loop0 done at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">loop1</span>():
</span></span><span style="display:flex;"><span>	print(<span style="color:#a5d6ff">&#39;start loop1 at:&#39;</span>, ctime())	
</span></span><span style="display:flex;"><span>	print(<span style="color:#a5d6ff">&#39;loop1 done at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">main</span>():
</span></span><span style="display:flex;"><span>	print(<span style="color:#a5d6ff">&#39;starting at :&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic"># 使用threading.Thread创建对象（子进程对象）</span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic"># threading.Thread（target=函数名）</span>
</span></span><span style="display:flex;"><span>	thread_1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>loop0)
</span></span><span style="display:flex;"><span>	thread_2 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>loop1)
</span></span><span style="display:flex;"><span>	thread_1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>	thread_2<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>	print(<span style="color:#a5d6ff">&#39;all done at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>	main()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>out<span style="color:#f85149">：</span>
</span></span><span style="display:flex;"><span>    starting at : Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">21</span>:<span style="color:#a5d6ff">27</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    start loop0 at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">21</span>:<span style="color:#a5d6ff">27</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    start loop1 at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">21</span>:<span style="color:#a5d6ff">27</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    loop1 done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">21</span>:<span style="color:#a5d6ff">27</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    all done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">21</span>:<span style="color:#a5d6ff">27</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    loop0 done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">21</span>:<span style="color:#a5d6ff">31</span> <span style="color:#a5d6ff">2019</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="线程数量">线程数量</h1>
<ul>
<li>目标
<ul>
<li>能够如何查看正在活动的线程数量</li>
<li>1.查看线程数量</li>
<li><code>threading.enumerate（）</code>获取当前所有活跃的线程对象列表。使用<code>len()</code>对列表求长度可以看到当前活跃的线程的个数</li>
</ul>
</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">35
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">36
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">37
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">38
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">39
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">40
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">from</span> <span style="color:#ff7b72">time</span> <span style="color:#ff7b72">import</span> <span style="color:#ff7b72;font-weight:bold">*</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">loop0</span>():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;</span><span style="color:#a5d6ff">{}</span><span style="color:#a5d6ff">start loop0 at</span><span style="color:#a5d6ff">{}</span><span style="color:#a5d6ff">:&#39;</span><span style="color:#ff7b72;font-weight:bold">.</span>format(threading<span style="color:#ff7b72;font-weight:bold">.</span>current_thread(), ctime()))
</span></span><span style="display:flex;"><span>    sleep(<span style="color:#a5d6ff">4</span>)
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;loop0 done at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">loop1</span>():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;</span><span style="color:#a5d6ff">{}</span><span style="color:#a5d6ff">start loop1 at</span><span style="color:#a5d6ff">{}</span><span style="color:#a5d6ff">:&#39;</span><span style="color:#ff7b72;font-weight:bold">.</span>format(threading<span style="color:#ff7b72;font-weight:bold">.</span>current_thread(), ctime()))
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;loop1 done at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">main</span>():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;starting at :&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 使用threading.Thread创建对象（子进程对象）</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># threading.Thread（target=函数名）</span>
</span></span><span style="display:flex;"><span>    thread_1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>loop0)
</span></span><span style="display:flex;"><span>    thread_2 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>loop1)
</span></span><span style="display:flex;"><span>    thread_1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>    thread_2<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#39;all done at:&#39;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    main()
</span></span><span style="display:flex;"><span>    thread_list <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>enumerate()
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;当前线程数量：</span><span style="color:#a5d6ff">%d</span><span style="color:#a5d6ff">&#34;</span> <span style="color:#ff7b72;font-weight:bold">%</span> len(thread_list))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>out:
</span></span><span style="display:flex;"><span>    starting at : Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">41</span>:<span style="color:#a5d6ff">20</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72;font-weight:bold">&lt;</span>Thread(Thread<span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">1</span>, started <span style="color:#a5d6ff">9916</span>)<span style="color:#ff7b72;font-weight:bold">&gt;</span>start loop0 atWed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">41</span>:<span style="color:#a5d6ff">20</span> <span style="color:#a5d6ff">2019</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72;font-weight:bold">&lt;</span>Thread(Thread<span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">2</span>, started <span style="color:#a5d6ff">2868</span>)<span style="color:#ff7b72;font-weight:bold">&gt;</span>start loop1 atWed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">41</span>:<span style="color:#a5d6ff">20</span> <span style="color:#a5d6ff">2019</span>:
</span></span><span style="display:flex;"><span>    loop1 done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">41</span>:<span style="color:#a5d6ff">20</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    all done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">41</span>:<span style="color:#a5d6ff">20</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    当前线程数量<span style="color:#f85149">：</span><span style="color:#a5d6ff">2</span>
</span></span><span style="display:flex;"><span>    loop0 done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">14</span>:<span style="color:#a5d6ff">41</span>:<span style="color:#a5d6ff">24</span> <span style="color:#a5d6ff">2019</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="线程参数及顺序">线程参数及顺序</h1>
<ul>
<li>线程中传递参数有三种方法
<ul>
<li>1.使用元组传递<code> threading.Thread(target=fun_name,args=(参数。。。))</code>
<code>thread_1 = threading.Thread(target=loop0, args=(10, 21, 22))</code></li>
<li>2.使用字典传递 <code>threading.Thread(target=fun_name,kwargs={&quot;参数名&quot;: &quot;参数值&quot;....})</code>
<code>thread_1 = threading.Thread(target=loop0, kwargs={&quot;a&quot;: 10, &quot;b&quot;: 21, &quot;c&quot;: 22})</code></li>
<li>3.混合使用元组和字典传递 <code>threading.Thread(target=fun_name,args=(10, 21, 22), kwargs={&quot;参数名&quot;: &quot;参数值&quot;....})</code>
<code>thread_1 = threading.Thread(target=loop0, args=(10, 21), kwargs={&quot;c&quot;: 22})</code></li>
</ul>
</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">35
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">36
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">37
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">38
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">39
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">40
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">41
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">42
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">43
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">44
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">45
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">from</span> <span style="color:#ff7b72">time</span> <span style="color:#ff7b72">import</span> <span style="color:#ff7b72;font-weight:bold">*</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">loop0</span>(a, b, c):
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;参数：&#34;</span>, a, b, c)
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;start loop0 at:&#34;</span>, ctime())
</span></span><span style="display:flex;"><span>    sleep(<span style="color:#a5d6ff">4</span>)
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;loop0 done at:&#34;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">loop1</span>():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;start loop1 at:&#34;</span>, ctime())
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;loop1 done at:&#34;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">main</span>():
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;starting at :&#34;</span>, ctime())
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 线程中传递参数有三种方法</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 1.使用元组传递 threading.Thread(target=fun_name,args=(参数。。。))</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># thread_1 = threading.Thread(target=loop0, args=(10, 21, 22))</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 2.使用字典传递 threading.Thread(target=fun_name,kwargs={&#34;参数名&#34;: &#34;参数值&#34;....})</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># thread_1 = threading.Thread(target=loop0, kwargs={&#34;a&#34;: 10, &#34;b&#34;: 21, &#34;c&#34;: 22})</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 3.混合使用元组和字典传递 threading.Thread(target=fun_name,args=(10, 21, 22), kwargs={&#34;参数名&#34;: &#34;参数值&#34;....})</span>
</span></span><span style="display:flex;"><span>    thread_1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>loop0, args<span style="color:#ff7b72;font-weight:bold">=</span>(<span style="color:#a5d6ff">10</span>, <span style="color:#a5d6ff">21</span>), kwargs<span style="color:#ff7b72;font-weight:bold">=</span>{<span style="color:#a5d6ff">&#34;c&#34;</span>: <span style="color:#a5d6ff">22</span>})
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    thread_2 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>loop1)
</span></span><span style="display:flex;"><span>    thread_1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>    thread_2<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;all done at:&#34;</span>, ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#34;__main__&#34;</span>:
</span></span><span style="display:flex;"><span>    main()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>out:
</span></span><span style="display:flex;"><span>	starting at : Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">15</span>:<span style="color:#a5d6ff">00</span>:<span style="color:#a5d6ff">00</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    参数<span style="color:#f85149">：</span> <span style="color:#a5d6ff">10</span> <span style="color:#a5d6ff">21</span> <span style="color:#a5d6ff">22</span>
</span></span><span style="display:flex;"><span>    start loop0 at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">15</span>:<span style="color:#a5d6ff">00</span>:<span style="color:#a5d6ff">00</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    start loop1 at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">15</span>:<span style="color:#a5d6ff">00</span>:<span style="color:#a5d6ff">00</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    loop1 done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">15</span>:<span style="color:#a5d6ff">00</span>:<span style="color:#a5d6ff">00</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    all done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">15</span>:<span style="color:#a5d6ff">00</span>:<span style="color:#a5d6ff">00</span> <span style="color:#a5d6ff">2019</span>
</span></span><span style="display:flex;"><span>    loop0 done at: Wed Nov <span style="color:#a5d6ff">13</span> <span style="color:#a5d6ff">15</span>:<span style="color:#a5d6ff">00</span>:<span style="color:#a5d6ff">04</span> <span style="color:#a5d6ff">2019</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="守护线程">守护线程</h1>
<ul>
<li>守护线程：如果在程序中将子线程设置为守护线程，则该子线程会在主线程结束时自动退出，设置方式为<code>threaj.setDaemon（True）</code>，要在<code>thread.start0</code>之前设置，默认是<code>false</code>的，也就是主线程结束时，子线程依然在执行。</li>
<li>对于python应用我们都知道<code>main</code>方法是入口，它的运行代表着主线程开始工作了，我们都知道<code>Python</code>虚拟机里面有垃圾回收器的存在使得我们放心让<code>main</code>运行，然而这背后是垃圾回收线程作为守护着主线程的守护线程。</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">time</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">work1</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> i <span style="color:#ff7b72;font-weight:bold">in</span> range(<span style="color:#a5d6ff">10</span>):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#34;正在执行work1...&#34;</span>, i)
</span></span><span style="display:flex;"><span>        time<span style="color:#ff7b72;font-weight:bold">.</span>sleep(<span style="color:#a5d6ff">0.5</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 创建子线程</span>
</span></span><span style="display:flex;"><span>    thread_woek1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>work1)
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 将子线程设置为守护线程</span>
</span></span><span style="display:flex;"><span>    thread_woek1<span style="color:#ff7b72;font-weight:bold">.</span>setDaemon(<span style="color:#79c0ff">True</span>)
</span></span><span style="display:flex;"><span>    thread_woek1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 睡眠</span>
</span></span><span style="display:flex;"><span>    time<span style="color:#ff7b72;font-weight:bold">.</span>sleep(<span style="color:#a5d6ff">2</span>)
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;game over&#34;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 让程序退出，主线程主动结束</span>
</span></span><span style="display:flex;"><span>    exit()
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>out:
</span></span><span style="display:flex;"><span>    正在执行work1<span style="color:#ff7b72;font-weight:bold">...</span> <span style="color:#a5d6ff">0</span>
</span></span><span style="display:flex;"><span>    正在执行work1<span style="color:#ff7b72;font-weight:bold">...</span> <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>    正在执行work1<span style="color:#ff7b72;font-weight:bold">...</span> <span style="color:#a5d6ff">2</span>
</span></span><span style="display:flex;"><span>    正在执行work1<span style="color:#ff7b72;font-weight:bold">...</span> <span style="color:#a5d6ff">3</span>
</span></span><span style="display:flex;"><span>    game over
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="并行和并发">并行和并发</h1>
<ul>
<li>多任务的原理剖析
<ul>
<li>操作系统轮流让各个任务交替执行，任务1执行0.01秒，切换到任务2，任务2执行0.01秒，再切换到任务3，执行0.01秒…….这样反复执行下去。</li>
<li>表面上看，每个任务都是交替执行的，但是，由于CPU的执行速度实在是太快了，我们感觉就像所有任务都在同时执行一样。</li>
</ul>
</li>
</ul>
<p><img loading="lazy" src="https://i.postimg.cc/Y0BWGx99/image-20191113153014444.png" alt="image-20191113153014444"  />
</p>
<ul>
<li>并发：指的是任务数多于cpu核数，通过操作系统的各种任务调度算法，实现用多个任务“一起”执行（实际上总有一些任务不在执行，因为切换任务的速度相当快，看上去一超执行而已）</li>
<li>真正的并行执行多任务只能在多核CPU上实现，但是，由于任务数量远远多于CPU的核心数量，所以，操作系统也会自动把很多任务轮流调度到每个核心上执行。</li>
<li><strong>并发：任务数量大于CPU的核心数</strong></li>
</ul>
<p><img loading="lazy" src="https://i.postimg.cc/DyVgLqD1/image-20191113152928736.png" alt="image-20191113152928736"  />
</p>
<ul>
<li>并行：指的是任务数小于等于cpu核数，即任务真的是一起执行的</li>
<li><strong>并行：任务数量小于或等于CPU的核心数</strong></li>
</ul>
<p><img loading="lazy" src="https://i.postimg.cc/2SYNcLqZ/image-20191113153308305.png" alt="d"  />
</p>
<h1 id="多线程共享全局变量">多线程——共享全局变量</h1>
<ul>
<li>当多个线程修改同一个资源的时候，会出现资源竞争，导致计算结果有误</li>
<li>调用<code>join</code>方法优先让某个线程先执行
<ul>
<li>缺点：将多线程变成了单线程，影响执行效率</li>
</ul>
</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">time</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>g_num <span style="color:#ff7b72;font-weight:bold">=</span> <span style="color:#a5d6ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">work1</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 声明g_num是一个全局变量</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">global</span> g_num
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> i <span style="color:#ff7b72;font-weight:bold">in</span> range(<span style="color:#a5d6ff">10000000</span>):
</span></span><span style="display:flex;"><span>        g_num <span style="color:#ff7b72;font-weight:bold">+=</span> <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;work1-----------------&#34;</span>, g_num)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">work2</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">global</span> g_num
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> i <span style="color:#ff7b72;font-weight:bold">in</span> range(<span style="color:#a5d6ff">10000000</span>):
</span></span><span style="display:flex;"><span>        g_num <span style="color:#ff7b72;font-weight:bold">+=</span> <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;work2-----------------&#34;</span>, g_num)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    work_1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>work1)
</span></span><span style="display:flex;"><span>    work_2 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>work2)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    work_1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 优先让t1线程先执行， t1执行完毕后，t2才能执行</span>
</span></span><span style="display:flex;"><span>    work_1<span style="color:#ff7b72;font-weight:bold">.</span>join()
</span></span><span style="display:flex;"><span>    work_2<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">while</span> len(threading<span style="color:#ff7b72;font-weight:bold">.</span>enumerate()) <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#a5d6ff">1</span>:
</span></span><span style="display:flex;"><span>        time<span style="color:#ff7b72;font-weight:bold">.</span>sleep(<span style="color:#a5d6ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;main-----------&#34;</span>, g_num)
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="同步和异步">同步和异步</h1>
<ul>
<li>同步：<strong>多任务</strong>，多个任务之间执行的时候要求有先后顺序，必须一个先执行完成之后，另一个才能继续执行，<strong>只有一个主线</strong>。如：你说完，我再说（同一时间只能做一件事情）</li>
<li>异步，指的是：多个任务之间执行没有先后顺序，可以同时运行，执行的先后顺序不会有什么影响，<strong>存在的多条运行主线</strong>。如：发微信（可以不用等对方回复，继续发）、点外卖（点了外卖后，可以继续忙其他的事情，而不是坐等外卖，啥也不做）</li>
</ul>
<h1 id="线程锁">线程锁</h1>
<p><img loading="lazy" src="https://i.postimg.cc/fRzttk8Z/image-20191113180221255.png" alt="image-20191113180221255"  />
</p>
<h2 id="互斥锁">互斥锁</h2>
<ul>
<li>当多个线程几乎同时修改某一个共享数据的时候，需要进行同步控制线程同步能够保证多个线程安全访问竞争源，最简单的同步机制是引入互斥锁。</li>
<li>互斥锁为资源引入一个状态：锁定/非锁定</li>
<li>某个线程要更改共享数据时，先将其锁定，此时资源的状态为“锁定”，其他线程不能更改；直到该线程释放资源，将资源的状态变成“非锁定”，其他的线程才能再次锁定该资源。</li>
<li>互斥锁保证了每次只有一个线程进行写入操作，从而保证了多线程情况下数据的正确性。</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">35
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">36
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">37
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">38
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">39
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">40
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">41
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">42
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">43
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">44
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">45
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">46
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">47
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">48
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">49
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">50
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">time</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>g_num <span style="color:#ff7b72;font-weight:bold">=</span> <span style="color:#a5d6ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">work1</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 声明g_num是一个全局变量</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">global</span> g_num
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> i <span style="color:#ff7b72;font-weight:bold">in</span> range(<span style="color:#a5d6ff">10000000</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic"># 上锁</span>
</span></span><span style="display:flex;"><span>        lock1<span style="color:#ff7b72;font-weight:bold">.</span>acquire()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        g_num <span style="color:#ff7b72;font-weight:bold">+=</span> <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic"># 释放锁</span>
</span></span><span style="display:flex;"><span>        lock1<span style="color:#ff7b72;font-weight:bold">.</span>release()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;work1-----------------&#34;</span>, g_num)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">work2</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">global</span> g_num
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> i <span style="color:#ff7b72;font-weight:bold">in</span> range(<span style="color:#a5d6ff">10000000</span>):
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic"># 上锁</span>
</span></span><span style="display:flex;"><span>        lock1<span style="color:#ff7b72;font-weight:bold">.</span>acquire()
</span></span><span style="display:flex;"><span>        g_num <span style="color:#ff7b72;font-weight:bold">+=</span> <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic"># 解锁</span>
</span></span><span style="display:flex;"><span>        lock1<span style="color:#ff7b72;font-weight:bold">.</span>release()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;work2-----------------&#34;</span>, g_num)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>    print(time<span style="color:#ff7b72;font-weight:bold">.</span>ctime())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 创建一把互斥锁</span>
</span></span><span style="display:flex;"><span>    lock1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Lock()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    work_1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>work1)
</span></span><span style="display:flex;"><span>    work_2 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>work2)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    work_1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>    work_2<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">while</span> len(threading<span style="color:#ff7b72;font-weight:bold">.</span>enumerate()) <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#a5d6ff">1</span>:
</span></span><span style="display:flex;"><span>        time<span style="color:#ff7b72;font-weight:bold">.</span>sleep(<span style="color:#a5d6ff">1</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;main-----------&#34;</span>, g_num)
</span></span><span style="display:flex;"><span>    print(<span style="color:#a5d6ff">&#34;总时间:&#34;</span>, time<span style="color:#ff7b72;font-weight:bold">.</span>ctime())
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="死锁">死锁</h2>
<ul>
<li>在线程间共享多个资源的时候，如果两个线程分别占有一部分资源并且同时等待对方的资源，就会造成死锁。</li>
<li>注意：使用完毕及时释放</li>
</ul>
<p><img loading="lazy" src="https://i.postimg.cc/SKFn39T6/image-20191113203902756.png" alt="image-20191113203902756"  />
</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff7b72">import</span> <span style="color:#ff7b72">threading</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">def</span> <span style="color:#d2a8ff;font-weight:bold">get_value</span>(index):
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    data_list <span style="color:#ff7b72;font-weight:bold">=</span> [<span style="color:#a5d6ff">1</span>, <span style="color:#a5d6ff">3</span>, <span style="color:#a5d6ff">5</span>, <span style="color:#a5d6ff">7</span>, <span style="color:#a5d6ff">9</span>]
</span></span><span style="display:flex;"><span>    lock1<span style="color:#ff7b72;font-weight:bold">.</span>acquire()
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">if</span> index <span style="color:#ff7b72;font-weight:bold">&gt;=</span> len(data_list):
</span></span><span style="display:flex;"><span>        print(<span style="color:#a5d6ff">&#34;下标越界&#34;</span>, index)
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic"># 若不释放就产生死锁</span>
</span></span><span style="display:flex;"><span>        lock1<span style="color:#ff7b72;font-weight:bold">.</span>release()
</span></span><span style="display:flex;"><span>        <span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    print(data_list[index])
</span></span><span style="display:flex;"><span>    lock1<span style="color:#ff7b72;font-weight:bold">.</span>release()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">if</span> __name__ <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">&#39;__main__&#39;</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic"># 创建一把锁</span>
</span></span><span style="display:flex;"><span>    lock1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Lock()
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">for</span> i <span style="color:#ff7b72;font-weight:bold">in</span> range(<span style="color:#a5d6ff">10</span>):
</span></span><span style="display:flex;"><span>        t1 <span style="color:#ff7b72;font-weight:bold">=</span> threading<span style="color:#ff7b72;font-weight:bold">.</span>Thread(target<span style="color:#ff7b72;font-weight:bold">=</span>get_value, args<span style="color:#ff7b72;font-weight:bold">=</span>(i, ))
</span></span><span style="display:flex;"><span>        t1<span style="color:#ff7b72;font-weight:bold">.</span>start()
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
  </channel>
</rss>
