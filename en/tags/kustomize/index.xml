<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kustomize on Luenci</title>
    <link>https://luenci.com/en/tags/kustomize/</link>
    <description>Recent content in Kustomize on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luenci.com/en/tags/kustomize/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>kustomize 介绍</title>
      <link>https://luenci.com/en/posts/kustomize%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/kustomize%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h1 id=&#34;kustomize-介绍&#34;&gt;kustomize 介绍&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;kustomize 是一个通过 kustomization 文件定制 kubernetes 对象的工具，它可以通过一些资源生成一些新的资源，也可以定制不同的资源的集合。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;kustomize-术语&#34;&gt;kustomize 术语&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kustomization&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;kustomization 指的是 kustomization.yaml 文件，或者指的是包含 kustomization.yaml 文件的目录以及它里面引用的所有相关文件路径&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="kustomize-介绍">kustomize 介绍</h1>
<blockquote>
<p>kustomize 是一个通过 kustomization 文件定制 kubernetes 对象的工具，它可以通过一些资源生成一些新的资源，也可以定制不同的资源的集合。</p></blockquote>
<h2 id="kustomize-术语">kustomize 术语</h2>
<ul>
<li><strong>kustomization</strong></li>
</ul>
<p>kustomization 指的是 kustomization.yaml 文件，或者指的是包含 kustomization.yaml 文件的目录以及它里面引用的所有相关文件路径</p>
<ul>
<li><strong>base</strong></li>
</ul>
<p>base 指的是一个 kustomization , 任何的 kustomization 包括 overlay (后面提到)，都可以作为另一个 kustomization 的 base (简单理解为基础目录)。base 中描述了共享的内容，如资源和常见的资源配置</p>
<ul>
<li><strong>overlay</strong></li>
</ul>
<p>overlay 是一个 kustomization, 它修改(并因此依赖于)另外一个 kustomization. overlay 中的 kustomization指的是一些其它的 kustomization, 称为其 base. 没有 base, overlay 无法使用，并且一个 overlay 可以用作 另一个 overlay 的 base(基础)。简而言之，overlay 声明了与 base 之间的差异。通过 overlay 来维护基于 base 的不同 variants(变体)，例如开发、QA 和生产环境的不同 variants</p>
<ul>
<li><strong>variant</strong></li>
</ul>
<p>variant 是在集群中将 overlay 应用于 base 的结果。例如开发和生产环境都修改了一些共同 base 以创建不同的 variant。这些 variant 使用相同的总体资源，并与简单的方式变化，例如 deployment 的副本数、ConfigMap使用的数据源等。简而言之，variant 是含有同一组 base 的不同 kustomization</p>
<ul>
<li><strong>resource</strong></li>
</ul>
<p>在 kustomize 的上下文中，resource 是描述 k8s API 对象的 YAML 或 JSON 文件的相对路径。即是指向一个声明了 kubernetes API 对象的 YAML 文件</p>
<ul>
<li><strong>patch</strong></li>
</ul>
<p>修改文件的一般说明。文件路径，指向一个声明了 kubernetes API patch 的 YAML 文件</p>
<!-- more -->
<h2 id="kustomizationyml">kustomization.yml</h2>
<p>一个常见的 <code>kustomization.yml</code> 如下所示，一般包含 <code>apiVsersion</code> 和 <code>kind</code> 两个固定字段</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#7ee787">apiVersion</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">kustomize.config.k8s.io/v1beta1</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span><span style="color:#7ee787">kind</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">Kustomization</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span><span style="color:#7ee787">resources</span>:<span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span>- <span style="color:#a5d6ff">manager.yaml</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span><span style="color:#7ee787">configMapGenerator</span>:<span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span>- <span style="color:#7ee787">files</span>:<span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">  </span>- <span style="color:#a5d6ff">controller_manager_config.yaml</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">  </span><span style="color:#7ee787">name</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">manager-config</span><span style="color:#6e7681">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>kustomize 提供了比较丰富的字段选择，除此之外还可以自定义插件，下面会大概列举一下每个字段的含义，当我们需要用到的时候知道有这么个能力，然后再去 <a href="https://kubectl.docs.kubernetes.io/zh/guides/">Kustomize 官方文档 </a>查找对应的 API 文档就行了</p>
<ul>
<li>
<p><code>resources</code> 表示 k8s 资源的位置，这个可以是一个文件，也可以指向一个文件夹，读取的时候会按照顺序读取，路径可以是相对路径也可以是绝对路径，如果是相对路径那么就是相对于 <code>kustomization.yml</code>的路径</p>
</li>
<li>
<p><code>crds</code> 和 <code>resources</code> 类似，只是 <code>crds</code> 是我们自定义的资源</p>
</li>
<li>
<p><code>namespace</code> 为所有资源添加 namespace</p>
</li>
<li>
<p><code>images</code> 修改镜像的名称、tag 或 image digest ，而无需使用 patches</p>
</li>
<li>
<p><code>replicas</code> 修改资源副本数</p>
</li>
<li>
<p><code>namePrefix</code> 为所有资源和引用的名称添加前缀</p>
</li>
<li>
<p><code>nameSuffix</code> 为所有资源和引用的名称添加后缀</p>
</li>
<li>
<p><code>patches</code> 在资源上添加或覆盖字段，Kustomization 使用 <code>patches</code> 字段来提供该功能。</p>
</li>
<li>
<p><code>patchesJson6902</code> 列表中的每个条目都应可以解析为 kubernetes 对象和将应用于该对象的 <a href="https://tools.ietf.org/html/rfc6902">JSON patch</a>。</p>
</li>
<li>
<p><code>patchesStrategicMerge</code> 使用 strategic merge patch 标准 Patch resources.</p>
</li>
<li>
<p><code>vars</code> 类似指定变量</p>
</li>
<li>
<p><code>commonAnnotations</code> 为所有资源加上 <code>annotations</code> 如果对应的 key 已经存在值，这个值将会被覆盖</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#7ee787">commonAnnotations</span>:<span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">  </span><span style="color:#7ee787">app.lailin.xyz/inject</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">agent</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span><span style="color:#7ee787">resources</span>:<span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span>- <span style="color:#a5d6ff">deploy.yaml</span><span style="color:#6e7681">
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>commonLabels</code> 为所有资源的加上 label 和 label selector <strong>注意：这个操作会比较危险</strong></p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#7ee787">apiVersion</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">kustomize.config.k8s.io/v1beta1</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span><span style="color:#7ee787">kind</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">Kustomization</span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681"></span><span style="color:#7ee787">commonLabels</span>:<span style="color:#6e7681">
</span></span></span><span style="display:flex;"><span><span style="color:#6e7681">  </span><span style="color:#7ee787">app</span>:<span style="color:#6e7681"> </span><span style="color:#a5d6ff">bingo</span><span style="color:#6e7681">
</span></span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>configMapGenerator</code> 可以生成 config map，列表中的每一条都会生成一个 configmap</p>
</li>
<li>
<p><code>secretGenerator</code> 用于生成 secret 资源</p>
</li>
<li>
<p><code>generatorOptions</code> 用于控制 <code>configMapGenerator</code> 和 <code>secretGenerator</code> 的行为</p>
</li>
</ul>
<h2 id="kustomize-示例">kustomize 示例</h2>
<pre><code>一个比较典型的场景是我们有一个应用，在不同的环境例如生产环境和测试环境，它的 yaml 配置绝大部分都是相同的，只有个别的字段不同，这时候就可以利用 kustomize 来解决，kustomize 也比较适合用于 giweights 工作流。
</code></pre>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#ff7b72;font-weight:bold">[</span>root@dev-01 sammy-app<span style="color:#ff7b72;font-weight:bold">]</span><span style="color:#8b949e;font-style:italic"># tree</span>
</span></span><span style="display:flex;"><span>.
</span></span><span style="display:flex;"><span>├── base
</span></span><span style="display:flex;"><span>│   ├── configmap.yml
</span></span><span style="display:flex;"><span>│   ├── deployment.yml
</span></span><span style="display:flex;"><span>│   ├── kustomization.yaml
</span></span><span style="display:flex;"><span>│   └── service.yml
</span></span><span style="display:flex;"><span>└── overlays
</span></span><span style="display:flex;"><span>    └── production
</span></span><span style="display:flex;"><span>        ├── kustomization.yml
</span></span><span style="display:flex;"><span>        └── map.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>​	如上图所示，有一个 <code>sammy-app</code> 的应用，<code>/base</code>目录保存的是基本的配置，<code>/overlays</code>里放置的不同环境的配置，例如 <code>/dev</code>、<code>/staging</code>，<code>/prod</code>这些就是不同环境的配置，<code>/base</code>等文件夹下都有一个 <code>kustomization .yml</code> 文件，用于配置。</p>
<p>执行 <code>kustomize build dir</code>的方式就可以生成我们最后用于部署的 yaml 文件，也就是进行到了我们上图的第四步，然后通过 <code>kubectl apply -f</code>命令进行部署。</p>
<h2 id="workflows-工作流">workflows 工作流</h2>
<p>​    kustomize 将对 Kubernetes 应用的管理转换成对 Kubernetes manifests YAML 文件的管理，而对应用的修改也通过 YAML 文件来修改。这种修改变更操作可以通过 Git 版本控制工具进行管理维护, 因此用户可以使用 Git 风格的流程来管理应用。 workflows 是使用并配置应用所使用的一系列 Git 风格流程步骤。官网提供了两种方式，一种是定制配置，另一种是现成配置。</p>
<h3 id="定制配置">定制配置</h3>
<p>在这个工作流中，所有的配置（YAML 文件）都属于用户所有。</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Lucareful/RepoImg/img/v2-c7e447efc35bb37bed3f0c7685c82a3b_720w.webp" alt="img"  />
</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 定制工作流步骤如下：</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>1、创建一个目录用于版本管理
</span></span><span style="display:flex;"><span>git init ~/ldap
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2、创建一个 base
</span></span><span style="display:flex;"><span>mkdir -p ~/ldap/base  <span style="color:#8b949e;font-style:italic"># 在这个目录中创建并提交 kustomization.yaml 文件和一组资源，例如 deployment、service</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>3、创建 overlays
</span></span><span style="display:flex;"><span>mkdir -p ~/ldap/overlays/staging
</span></span><span style="display:flex;"><span>mkdir -p ~/ldap/overlays/production
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>4、生成 variants
</span></span><span style="display:flex;"><span>kustomize build ~/ldap/overlays/staging | kubectl apply -f -
</span></span><span style="display:flex;"><span>kustomize build ~/ldap/overlays/production | kubectl apply -f -
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>kubectl v1.14 版使用下面：
</span></span><span style="display:flex;"><span>kubectl apply -k ~/ldap/overlays/staging
</span></span><span style="display:flex;"><span>kubectl apply -k ~/ldap/overlays/production
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="现成配置">现成配置</h3>
<p>在这个工作流方式中，可从别人的 repo 中 fork kustomize 配置，并根据自己的需求来配置</p>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Lucareful/RepoImg/img/v2-3e43ae6bd923dde8519625ed52dd504d_720w.webp" alt="img"  />
</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"># 现成配置工作流步骤如下：</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>1、通过 fork 方式获得现成配置
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2、clone 作为你的 base
</span></span><span style="display:flex;"><span>mkdir ~/ldap
</span></span><span style="display:flex;"><span>git clone https://github.com/<span style="color:#79c0ff">$USER</span>/ldap ~/ldap/base
</span></span><span style="display:flex;"><span>cd ~/ldap/base
</span></span><span style="display:flex;"><span>git remote add upstream git@github.com:<span style="color:#79c0ff">$USER</span>/ldap
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>3、创建并填充 overlays
</span></span><span style="display:flex;"><span>mkdir -p ~/ldap/overlays/staging
</span></span><span style="display:flex;"><span>mkdir -p ~/ldap/overlays/production
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>4、生成 variants
</span></span><span style="display:flex;"><span>kustomize build ~/ldap/overlays/staging | kubectl apply -f -
</span></span><span style="display:flex;"><span>kustomize build ~/ldap/overlays/production | kubectl apply -f -
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>5、<span style="color:#ff7b72;font-weight:bold">(</span>可选<span style="color:#ff7b72;font-weight:bold">)</span>更新上游配置，用户可以定期更新他的 base, 以更新上游所做的修改
</span></span><span style="display:flex;"><span>cd ~/ldap/base
</span></span><span style="display:flex;"><span>git fetch upstream
</span></span><span style="display:flex;"><span>git rebase upstream/master通过上面两种工作流方式，可以实现自定义管理应用的声明式资源文件，或者基于别人的应用声明式资源进行自定义修改
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="总结">总结</h2>
<p>总的来说 kustomize 更适合 giweights 模式，相比于 helm ，kustomize更加轻量，原生的yaml模版，不必学习新语法。而 helm 支持 GoTemplate，组件上也要多一些，并且 helm 通过 chart 包来进行发布相对来说还是要重量级一些。</p>
<h1 id="参考文章">参考文章</h1>
<ul>
<li><a href="https://lailin.xyz/post/operator-04-kustomize-tutorial.html">4. kustomize 简明教程 - Mohuishou (lailin.xyz)</a></li>
<li>[kustomize 最简实践 - 知乎 (zhihu.com)](</li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>
