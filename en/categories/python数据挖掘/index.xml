<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python数据挖掘 on Luenci</title>
    <link>https://luenci.com/en/categories/python%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/</link>
    <description>Recent content in Python数据挖掘 on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/categories/python%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pandas函数</title>
      <link>https://luenci.com/en/posts/pandas%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/pandas%E5%87%BD%E6%95%B0/</guid>
      <description>&lt;h1 id=&#34;pythonpandas中dataframe基本函数整理&#34;&gt;【python】Pandas中DataFrame基本函数整理&lt;/h1&gt;
&lt;h5 id=&#34;构造函数&#34;&gt;构造函数&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;DataFrame([data, index, columns, dtype, copy]) 	#构造数据框1&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;属性和数据&#34;&gt;属性和数据&lt;/h5&gt;
&lt;p&gt;DataFrame.axes                                #index: 行标签；columns: 列标签
DataFrame.as_matrix([columns])                #转换为矩阵
DataFrame.dtypes                              #返回数据的类型
DataFrame.ftypes                              #返回每一列的 数据类型float64:dense
DataFrame.get_dtype_counts()                  #返回数据框数据类型的个数
DataFrame.get_ftype_counts()                  #返回数据框数据类型float64:dense的个数
DataFrame.select_dtypes([include, include])   #根据数据类型选取子数据框
DataFrame.values                              #Numpy的展示方式
DataFrame.axes                                #返回横纵坐标的标签名
DataFrame.ndim                                #返回数据框的纬度
DataFrame.size                                #返回数据框元素的个数
DataFrame.shape                               #返回数据框的形状
DataFrame.memory_usage()                      #每一列的存储12345678910111213&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="pythonpandas中dataframe基本函数整理">【python】Pandas中DataFrame基本函数整理</h1>
<h5 id="构造函数">构造函数</h5>
<ul>
<li>DataFrame([data, index, columns, dtype, copy]) 	#构造数据框1</li>
</ul>
<h5 id="属性和数据">属性和数据</h5>
<p>DataFrame.axes                                #index: 行标签；columns: 列标签
DataFrame.as_matrix([columns])                #转换为矩阵
DataFrame.dtypes                              #返回数据的类型
DataFrame.ftypes                              #返回每一列的 数据类型float64:dense
DataFrame.get_dtype_counts()                  #返回数据框数据类型的个数
DataFrame.get_ftype_counts()                  #返回数据框数据类型float64:dense的个数
DataFrame.select_dtypes([include, include])   #根据数据类型选取子数据框
DataFrame.values                              #Numpy的展示方式
DataFrame.axes                                #返回横纵坐标的标签名
DataFrame.ndim                                #返回数据框的纬度
DataFrame.size                                #返回数据框元素的个数
DataFrame.shape                               #返回数据框的形状
DataFrame.memory_usage()                      #每一列的存储12345678910111213</p>
<h5 id="类型转换">类型转换</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>astype(dtype[, copy, errors])       <span style="color:#8b949e;font-style:italic">#转换数据类型</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>copy([deep])                        <span style="color:#8b949e;font-style:italic">#deep深度复制数据</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>isnull()                            <span style="color:#8b949e;font-style:italic">#以布尔的方式返回空值</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>notnull()                           <span style="color:#8b949e;font-style:italic">#以布尔的方式返回非空值1234</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="索引和迭代">索引和迭代</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>head([n])                           <span style="color:#8b949e;font-style:italic">#返回前n行数据</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>at                                  <span style="color:#8b949e;font-style:italic">#快速标签常量访问器</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>iat                                 <span style="color:#8b949e;font-style:italic">#快速整型常量访问器</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>loc                                 <span style="color:#8b949e;font-style:italic">#标签定位，使用名称</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>iloc                                <span style="color:#8b949e;font-style:italic">#整型定位，使用数字</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>insert(loc, column, value)          <span style="color:#8b949e;font-style:italic">#在特殊地点loc[数字]插入column[列名]某列数据</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>iter()                              <span style="color:#8b949e;font-style:italic">#Iterate over infor axis</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>iteritems()                         <span style="color:#8b949e;font-style:italic">#返回列名和序列的迭代器</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>iterrows()                          <span style="color:#8b949e;font-style:italic">#返回索引和序列的迭代器</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>itertuples([index, name])           <span style="color:#8b949e;font-style:italic">#Iterate over DataFrame rows as namedtuples, with index value as first element of the tuple.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>lookup(row_labels, col_labels)      <span style="color:#8b949e;font-style:italic">#Label-based “fancy indexing” function for DataFrame.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>pop(item)                           <span style="color:#8b949e;font-style:italic">#返回删除的项目</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>tail([n])                           <span style="color:#8b949e;font-style:italic">#返回最后n行</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>xs(key[, axis, level, drop_level])  <span style="color:#8b949e;font-style:italic">#Returns a cross-section (row(s) or column(s)) from the Series/DataFrame.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>isin(values)                        <span style="color:#8b949e;font-style:italic">#是否包含数据框中的元素</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>where(cond[, other, inplace, <span style="color:#f85149">…</span>])    <span style="color:#8b949e;font-style:italic">#条件筛选</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>mask(cond[, other, inplace, <span style="color:#f85149">…</span>])     <span style="color:#8b949e;font-style:italic">#Return an object of same shape as self and whose corresponding entries are from self where cond is False and otherwise are from other.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>query(expr[, inplace])              <span style="color:#8b949e;font-style:italic">#Query the columns of a frame with a boolean expression.123456789101112131415161718</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="二元运算">二元运算</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>add(other[,axis,fill_value])        <span style="color:#8b949e;font-style:italic">#加法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>sub(other[,axis,fill_value])        <span style="color:#8b949e;font-style:italic">#减法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>mul(other[, axis,fill_value])       <span style="color:#8b949e;font-style:italic">#乘法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>div(other[, axis,fill_value])       <span style="color:#8b949e;font-style:italic">#小数除法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>truediv(other[, axis, level, <span style="color:#f85149">…</span>])    <span style="color:#8b949e;font-style:italic">#真除法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>floordiv(other[, axis, level, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#向下取整除法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>mod(other[, axis,fill_value])       <span style="color:#8b949e;font-style:italic">#模运算，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>pow(other[, axis,fill_value])       <span style="color:#8b949e;font-style:italic">#幂运算，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>radd(other[, axis,fill_value])      <span style="color:#8b949e;font-style:italic">#右侧加法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rsub(other[, axis,fill_value])      <span style="color:#8b949e;font-style:italic">#右侧减法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rmul(other[, axis,fill_value])      <span style="color:#8b949e;font-style:italic">#右侧乘法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rdiv(other[, axis,fill_value])      <span style="color:#8b949e;font-style:italic">#右侧小数除法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rtruediv(other[, axis, <span style="color:#f85149">…</span>])          <span style="color:#8b949e;font-style:italic">#右侧真除法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rfloordiv(other[, axis, <span style="color:#f85149">…</span>])         <span style="color:#8b949e;font-style:italic">#右侧向下取整除法，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rmod(other[, axis,fill_value])      <span style="color:#8b949e;font-style:italic">#右侧模运算，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rpow(other[, axis,fill_value])      <span style="color:#8b949e;font-style:italic">#右侧幂运算，元素指向</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>lt(other[, axis, level])            <span style="color:#8b949e;font-style:italic">#类似Array.lt</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>gt(other[, axis, level])            <span style="color:#8b949e;font-style:italic">#类似Array.gt</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>le(other[, axis, level])            <span style="color:#8b949e;font-style:italic">#类似Array.le</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>ge(other[, axis, level])            <span style="color:#8b949e;font-style:italic">#类似Array.ge</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>ne(other[, axis, level])            <span style="color:#8b949e;font-style:italic">#类似Array.ne</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>eq(other[, axis, level])            <span style="color:#8b949e;font-style:italic">#类似Array.eq</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>combine(other,func[,fill_value, <span style="color:#f85149">…</span>]) <span style="color:#8b949e;font-style:italic">#Add two DataFrame objects and do not propagate NaN values, so if for a</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>combine_first(other)                <span style="color:#8b949e;font-style:italic">#Combine two DataFrame objects and default to non-null values in frame calling the method.123456789101112131415161718192021222324</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="函数应用分组窗口">函数应用&amp;分组&amp;窗口</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>apply(func[, axis, broadcast, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#应用函数</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>applymap(func)                      <span style="color:#8b949e;font-style:italic">#Apply a function to a DataFrame that is intended to operate elementwise, i.e.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>aggregate(func[, axis])             <span style="color:#8b949e;font-style:italic">#Aggregate using callable, string, dict, or list of string/callables</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>transform(func, <span style="color:#ff7b72;font-weight:bold">*</span>args, <span style="color:#ff7b72;font-weight:bold">**</span>kwargs)    <span style="color:#8b949e;font-style:italic">#Call function producing a like-indexed NDFrame</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>groupby([by, axis, level, <span style="color:#f85149">…</span>])       <span style="color:#8b949e;font-style:italic">#分组</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rolling(window[, min_periods, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#滚动窗口</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>expanding([min_periods, freq, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#拓展窗口</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>ewm([com, span, halflife,  <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#指数权重窗口12345678</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="描述统计学">描述统计学</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>abs()                               <span style="color:#8b949e;font-style:italic">#返回绝对值</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>all([axis, bool_only, skipna])      <span style="color:#8b949e;font-style:italic">#Return whether all elements are True over requested axis</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>any([axis, bool_only, skipna])      <span style="color:#8b949e;font-style:italic">#Return whether any element is True over requested axis</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>clip([lower, upper, axis])          <span style="color:#8b949e;font-style:italic">#Trim values at input threshold(s).</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>clip_lower(threshold[, axis])       <span style="color:#8b949e;font-style:italic">#Return copy of the input with values below given value(s) truncated.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>clip_upper(threshold[, axis])       <span style="color:#8b949e;font-style:italic">#Return copy of input with values above given value(s) truncated.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>corr([method, min_periods])         <span style="color:#8b949e;font-style:italic">#返回本数据框成对列的相关性系数</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>corrwith(other[, axis, drop])       <span style="color:#8b949e;font-style:italic">#返回不同数据框的相关性</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>count([axis, level, numeric_only])  <span style="color:#8b949e;font-style:italic">#返回非空元素的个数</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>cov([min_periods])                  <span style="color:#8b949e;font-style:italic">#计算协方差</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>cummax([axis, skipna])              <span style="color:#8b949e;font-style:italic">#Return cumulative max over requested axis.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>cummin([axis, skipna])              <span style="color:#8b949e;font-style:italic">#Return cumulative minimum over requested axis.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>cumprod([axis, skipna])             <span style="color:#8b949e;font-style:italic">#返回累积</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>cumsum([axis, skipna])              <span style="color:#8b949e;font-style:italic">#返回累和</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>describe([percentiles,include, <span style="color:#f85149">…</span>])  <span style="color:#8b949e;font-style:italic">#整体描述数据框</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>diff([periods, axis])               <span style="color:#8b949e;font-style:italic">#1st discrete difference of object</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>eval(expr[, inplace])               <span style="color:#8b949e;font-style:italic">#Evaluate an expression in the context of the calling DataFrame instance.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>kurt([axis, skipna, level, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#返回无偏峰度Fisher’s  (kurtosis of normal == 0.0).</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>mad([axis, skipna, level])          <span style="color:#8b949e;font-style:italic">#返回偏差</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>max([axis, skipna, level, <span style="color:#f85149">…</span>])       <span style="color:#8b949e;font-style:italic">#返回最大值</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>mean([axis, skipna, level, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#返回均值</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>median([axis, skipna, level, <span style="color:#f85149">…</span>])    <span style="color:#8b949e;font-style:italic">#返回中位数</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>min([axis, skipna, level, <span style="color:#f85149">…</span>])       <span style="color:#8b949e;font-style:italic">#返回最小值</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>mode([axis, numeric_only])          <span style="color:#8b949e;font-style:italic">#返回众数</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>pct_change([periods, fill_method])  <span style="color:#8b949e;font-style:italic">#返回百分比变化</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>prod([axis, skipna, level, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#返回连乘积</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>quantile([q, axis, numeric_only])   <span style="color:#8b949e;font-style:italic">#返回分位数</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rank([axis, method, numeric_only])  <span style="color:#8b949e;font-style:italic">#返回数字的排序</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>round([decimals])                   <span style="color:#8b949e;font-style:italic">#Round a DataFrame to a variable number of decimal places.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>sem([axis, skipna, level, ddof])    <span style="color:#8b949e;font-style:italic">#返回无偏标准误</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>skew([axis, skipna, level, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#返回无偏偏度</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>sum([axis, skipna, level, <span style="color:#f85149">…</span>])       <span style="color:#8b949e;font-style:italic">#求和</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>std([axis, skipna, level, ddof])    <span style="color:#8b949e;font-style:italic">#返回标准误差</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>var([axis, skipna, level, ddof])    <span style="color:#8b949e;font-style:italic">#返回无偏误差 12345678910111213141516171819202122232425262728293031323334</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从新索引选取标签操作">从新索引&amp;选取&amp;标签操作</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>add_prefix(prefix)                  <span style="color:#8b949e;font-style:italic">#添加前缀</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>add_suffix(suffix)                  <span style="color:#8b949e;font-style:italic">#添加后缀</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>align(other[, join, axis, level])   <span style="color:#8b949e;font-style:italic">#Align two object on their axes with the</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>drop(labels[, axis, level, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#返回删除的列</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>drop_duplicates([subset, keep, <span style="color:#f85149">…</span>])  <span style="color:#8b949e;font-style:italic">#Return DataFrame with duplicate rows removed, optionally only</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>duplicated([subset, keep])          <span style="color:#8b949e;font-style:italic">#Return boolean Series denoting duplicate rows, optionally only</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>equals(other)                       <span style="color:#8b949e;font-style:italic">#两个数据框是否相同</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>filter([items, like, regex, axis])  <span style="color:#8b949e;font-style:italic">#过滤特定的子数据框</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>first(offset)                       <span style="color:#8b949e;font-style:italic">#Convenience method for subsetting initial periods of time series data based on a date offset.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>head([n])                           <span style="color:#8b949e;font-style:italic">#返回前n行</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>idxmax([axis, skipna])              <span style="color:#8b949e;font-style:italic">#Return index of first occurrence of maximum over requested axis.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>idxmin([axis, skipna])              <span style="color:#8b949e;font-style:italic">#Return index of first occurrence of minimum over requested axis.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>last(offset)                        <span style="color:#8b949e;font-style:italic">#Convenience method for subsetting final periods of time series data based on a date offset.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>reindex([index, columns])           <span style="color:#8b949e;font-style:italic">#Conform DataFrame to new index with optional filling logic, placing NA/NaN in locations having no value in the previous index.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>reindex_axis(labels[, axis, <span style="color:#f85149">…</span>])     <span style="color:#8b949e;font-style:italic">#Conform input object to new index with optional filling logic, placing NA/NaN in locations having no value in the previous index.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>reindex_like(other[, method, <span style="color:#f85149">…</span>])    <span style="color:#8b949e;font-style:italic">#Return an object with matching indices to myself.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rename([index, columns])            <span style="color:#8b949e;font-style:italic">#Alter axes input function or functions.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>rename_axis(mapper[, axis, copy])   <span style="color:#8b949e;font-style:italic">#Alter index and / or columns using input function or functions.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>reset_index([level, drop, <span style="color:#f85149">…</span>])       <span style="color:#8b949e;font-style:italic">#For DataFrame with multi-level index, return new DataFrame with labeling information in the columns under the index names, defaulting to ‘level_0’, ‘level_1’, etc.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>sample([n, frac, replace, <span style="color:#f85149">…</span>])       <span style="color:#8b949e;font-style:italic">#返回随机抽样</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>select(crit[, axis])                <span style="color:#8b949e;font-style:italic">#Return data corresponding to axis labels matching criteria</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>set_index(keys[, drop, append ])    <span style="color:#8b949e;font-style:italic">#Set the DataFrame index (row labels) using one or more existing columns.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>tail([n])                           <span style="color:#8b949e;font-style:italic">#返回最后几行</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>take(indices[, axis, convert])      <span style="color:#8b949e;font-style:italic">#Analogous to ndarray.take</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>truncate([before, after, axis ])    <span style="color:#8b949e;font-style:italic">#Truncates a sorted NDFrame before and/or after some particular index value.12345678910111213141516171819202122232425</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="处理缺失值">处理缺失值</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>DataFrame.dropna([axis, how, thresh, …])      #Return object with labels on given axis omitted where alternately any
</span></span><span style="display:flex;"><span>DataFrame.fillna([value, method, axis, …])    #填充空值
</span></span><span style="display:flex;"><span>DataFrame.replace([to_replace, value, …])     #Replace values given in ‘to_replace’ with ‘value’.123
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="从新定型排序转变形态">从新定型&amp;排序&amp;转变形态</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>pivot([index, columns, values])     <span style="color:#8b949e;font-style:italic">#Reshape data (produce a “pivot” table) based on column values.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>reorder_levels(order[, axis])       <span style="color:#8b949e;font-style:italic">#Rearrange index levels using input order.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>sort_values(by[, axis, ascending])  <span style="color:#8b949e;font-style:italic">#Sort by the values along either axis</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>sort_index([axis, level, <span style="color:#f85149">…</span>])        <span style="color:#8b949e;font-style:italic">#Sort object by labels (along an axis)</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>nlargest(n, columns[, keep])        <span style="color:#8b949e;font-style:italic">#Get the rows of a DataFrame sorted by the n largest values of columns.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>nsmallest(n, columns[, keep])       <span style="color:#8b949e;font-style:italic">#Get the rows of a DataFrame sorted by the n smallest values of columns.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>swaplevel([i, j, axis])             <span style="color:#8b949e;font-style:italic">#Swap levels i and j in a MultiIndex on a particular axis</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>stack([level, dropna])              <span style="color:#8b949e;font-style:italic">#Pivot a level of the (possibly hierarchical) column labels, returning a DataFrame (or Series in the case of an object with a single level of column labels) having a hierarchical index with a new inner-most level of row labels.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>unstack([level, fill_value])        <span style="color:#8b949e;font-style:italic">#Pivot a level of the (necessarily hierarchical) index labels, returning a DataFrame having a new level of column labels whose inner-most level consists of the pivoted index labels.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>melt([id_vars, value_vars, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#“Unpivots” a DataFrame from wide format to long format, optionally</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>T                                   <span style="color:#8b949e;font-style:italic">#Transpose index and columns</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_panel()                          <span style="color:#8b949e;font-style:italic">#Transform long (stacked) format (DataFrame) into wide (3D, Panel) format.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_xarray()                         <span style="color:#8b949e;font-style:italic">#Return an xarray object from the pandas object.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>transpose(<span style="color:#ff7b72;font-weight:bold">*</span>args, <span style="color:#ff7b72;font-weight:bold">**</span>kwargs)          <span style="color:#8b949e;font-style:italic">#Transpose index and columns1234567891011121314</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="combining-joiningmerging">Combining&amp; joining&amp;merging</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>append(other[, ignore_index, <span style="color:#f85149">…</span>])    <span style="color:#8b949e;font-style:italic">#追加数据</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>assign(<span style="color:#ff7b72;font-weight:bold">**</span>kwargs)                    <span style="color:#8b949e;font-style:italic">#Assign new columns to a DataFrame, returning a new object (a copy) with all the original columns in addition to the new ones.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>join(other[, on, how, lsuffix, <span style="color:#f85149">…</span>])  <span style="color:#8b949e;font-style:italic">#Join columns with other DataFrame either on index or on a key column.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>merge(right[, how, on, left_on, <span style="color:#f85149">…</span>]) <span style="color:#8b949e;font-style:italic">#Merge DataFrame objects by performing a database-style join operation by columns or indexes.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>update(other[, join, overwrite, <span style="color:#f85149">…</span>]) <span style="color:#8b949e;font-style:italic">#Modify DataFrame in place using non-NA values from passed DataFrame.12345</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="时间序列">时间序列</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>asfreq(freq[, method, how, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#将时间序列转换为特定的频次</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>asof(where[, subset])               <span style="color:#8b949e;font-style:italic">#The last row without any NaN is taken (or the last row without</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>shift([periods, freq, axis])        <span style="color:#8b949e;font-style:italic">#Shift index by desired number of periods with an optional time freq</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>first_valid_index()                 <span style="color:#8b949e;font-style:italic">#Return label for first non-NA/null value</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>last_valid_index()                  <span style="color:#8b949e;font-style:italic">#Return label for last non-NA/null value</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>resample(rule[, how, axis, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#Convenience method for frequency conversion and resampling of time series.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_period([freq, axis, copy])       <span style="color:#8b949e;font-style:italic">#Convert DataFrame from DatetimeIndex to PeriodIndex with desired</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_timestamp([freq, how, axis])     <span style="color:#8b949e;font-style:italic">#Cast to DatetimeIndex of timestamps, at beginning of period</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>tz_convert(tz[, axis, level, copy]) <span style="color:#8b949e;font-style:italic">#Convert tz-aware axis to target time zone.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>tz_localize(tz[, axis, level, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#Localize tz-naive TimeSeries to target time zone.12345678910</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="作图">作图</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot([x, y, kind, ax, <span style="color:#f85149">…</span><span style="color:#ff7b72;font-weight:bold">.</span>])          <span style="color:#8b949e;font-style:italic">#DataFrame plotting accessor and method</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>area([x, y])                   <span style="color:#8b949e;font-style:italic">#面积图Area plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>bar([x, y])                    <span style="color:#8b949e;font-style:italic">#垂直条形图Vertical bar plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>barh([x, y])                   <span style="color:#8b949e;font-style:italic">#水平条形图Horizontal bar plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>box([by])                      <span style="color:#8b949e;font-style:italic">#箱图Boxplot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>density(<span style="color:#ff7b72;font-weight:bold">**</span>kwds)                <span style="color:#8b949e;font-style:italic">#核密度Kernel Density Estimate plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>hexbin(x, y[, C, <span style="color:#f85149">…</span>])           <span style="color:#8b949e;font-style:italic">#Hexbin plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>hist([by, bins])               <span style="color:#8b949e;font-style:italic">#直方图Histogram</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>kde(<span style="color:#ff7b72;font-weight:bold">**</span>kwds)                    <span style="color:#8b949e;font-style:italic">#核密度Kernel Density Estimate plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>line([x, y])                   <span style="color:#8b949e;font-style:italic">#线图Line plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>pie([y])                       <span style="color:#8b949e;font-style:italic">#饼图Pie chart</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>plot<span style="color:#ff7b72;font-weight:bold">.</span>scatter(x, y[, s, c])          <span style="color:#8b949e;font-style:italic">#散点图Scatter plot</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>boxplot([column, by, ax, <span style="color:#f85149">…</span>])        <span style="color:#8b949e;font-style:italic">#Make a box plot from DataFrame column optionally grouped by some columns or</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>hist(data[, column, by, grid, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#Draw histogram of the DataFrame’s series using matplotlib / pylab.1234567891011121314</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h5 id="转换为其他格式">转换为其他格式</h5>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>from_csv(path[, header, sep, <span style="color:#f85149">…</span>])    <span style="color:#8b949e;font-style:italic">#Read CSV file (DEPRECATED, please use pandas.read_csv() instead).</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>from_dict(data[, orient, dtype])    <span style="color:#8b949e;font-style:italic">#Construct DataFrame from dict of array-like or dicts</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>from_items(items[,columns,orient])  <span style="color:#8b949e;font-style:italic">#Convert (key, value) pairs to DataFrame.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>from_records(data[, index, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#Convert structured or record ndarray to DataFrame</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>info([verbose, buf, max_cols, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#Concise summary of a DataFrame.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_pickle(path[, compression, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#Pickle (serialize) object to input file path.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_csv([path_or_buf, sep, na_rep])  <span style="color:#8b949e;font-style:italic">#Write DataFrame to a comma-separated values (csv) file</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_hdf(path_or_buf, key, <span style="color:#ff7b72;font-weight:bold">**</span>kwargs)  <span style="color:#8b949e;font-style:italic">#Write the contained data to an HDF5 file using HDFStore.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_sql(name, con[, flavor, <span style="color:#f85149">…</span>])      <span style="color:#8b949e;font-style:italic">#Write records stored in a DataFrame to a SQL database.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_dict([orient, into])             <span style="color:#8b949e;font-style:italic">#Convert DataFrame to dictionary.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_excel(excel_writer[, <span style="color:#f85149">…</span>])         <span style="color:#8b949e;font-style:italic">#Write DataFrame to an excel sheet</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_json([path_or_buf, orient, <span style="color:#f85149">…</span>])   <span style="color:#8b949e;font-style:italic">#Convert the object to a JSON string.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_html([buf, columns, col_space])  <span style="color:#8b949e;font-style:italic">#Render a DataFrame as an HTML table.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_feather(fname)                   <span style="color:#8b949e;font-style:italic">#write out the binary feather-format for DataFrames</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_latex([buf, columns, <span style="color:#f85149">…</span>])         <span style="color:#8b949e;font-style:italic">#Render an object to a tabular environment table.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_stata(fname[, convert_dates, <span style="color:#f85149">…</span>]) <span style="color:#8b949e;font-style:italic">#A class for writing Stata binary dta files from array-like objects</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_msgpack([path_or_buf, encoding]) <span style="color:#8b949e;font-style:italic">#msgpack (serialize) object to input file path</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_sparse([fill_value, kind])       <span style="color:#8b949e;font-style:italic">#Convert to SparseDataFrame</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_dense()                          <span style="color:#8b949e;font-style:italic">#Return dense representation of NDFrame (as opposed to sparse)</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_string([buf, columns, <span style="color:#f85149">…</span>])        <span style="color:#8b949e;font-style:italic">#Render a DataFrame to a console-friendly tabular output.</span>
</span></span><span style="display:flex;"><span>DataFrame<span style="color:#ff7b72;font-weight:bold">.</span>to_clipboard([excel, sep])          <span style="color:#8b949e;font-style:italic">#Attempt to write text representation of object to the system cli</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
  </channel>
</rss>
