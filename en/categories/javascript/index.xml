<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JavaScript on Luenci</title>
    <link>https://luenci.com/en/categories/javascript/</link>
    <description>Recent content in JavaScript on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript基本知识</title>
      <link>https://luenci.com/en/posts/javascript%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/javascript%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;h1 id=&#34;javascript作用&#34;&gt;JavaScript作用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;表单动态检验（密码强度检测）&lt;/li&gt;
&lt;li&gt;网页特效&lt;/li&gt;
&lt;li&gt;服务端开发（Node.js）&lt;/li&gt;
&lt;li&gt;桌面程序（Electron）&lt;/li&gt;
&lt;li&gt;APP（Cordova）&lt;/li&gt;
&lt;li&gt;控制硬件 - 物联网（Ruff）&lt;/li&gt;
&lt;li&gt;游戏小程序（cocos2d-js）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;htmlcssjs的关系&#34;&gt;HTML/CSS/JS的关系&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;HTML/CSS标记语言&amp;ndash;描述类语言
&lt;ul&gt;
&lt;li&gt;HTML决定网页结构和内容（决定看到什么），相当于人的身体&lt;/li&gt;
&lt;li&gt;CSS决定网页呈现给用户的模样（决定好不好看），相当于给人穿衣服、化妆&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JS脚本语言-编程类语言
&lt;ul&gt;
&lt;li&gt;实现业务逻辑和页面控制（决定功能），相当于人的各种动作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;浏览器执行js&#34;&gt;浏览器执行js&lt;/h1&gt;
&lt;p&gt;浏览器分成两部分：渲染引擎和JS引擎&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="javascript作用">JavaScript作用</h1>
<ul>
<li>表单动态检验（密码强度检测）</li>
<li>网页特效</li>
<li>服务端开发（Node.js）</li>
<li>桌面程序（Electron）</li>
<li>APP（Cordova）</li>
<li>控制硬件 - 物联网（Ruff）</li>
<li>游戏小程序（cocos2d-js）</li>
</ul>
<h1 id="htmlcssjs的关系">HTML/CSS/JS的关系</h1>
<ul>
<li>HTML/CSS标记语言&ndash;描述类语言
<ul>
<li>HTML决定网页结构和内容（决定看到什么），相当于人的身体</li>
<li>CSS决定网页呈现给用户的模样（决定好不好看），相当于给人穿衣服、化妆</li>
</ul>
</li>
<li>JS脚本语言-编程类语言
<ul>
<li>实现业务逻辑和页面控制（决定功能），相当于人的各种动作</li>
</ul>
</li>
</ul>
<h1 id="浏览器执行js">浏览器执行js</h1>
<p>浏览器分成两部分：渲染引擎和JS引擎</p>
<ul>
<li>
<p>渲染引擎：用来解析HTML与CSS，俗称内核，比如chrome浏览器的blink，老版本的webkit</p>
</li>
<li>
<p>JS引擎：也称为JS解释器。用来读取网页中的JavaScript代码，对其处理后运行，比如chrome浏览器的V8</p>
</li>
</ul>
<blockquote>
<p>浏览器本身并不会执行JS代码，而是通过内置JavaScript引擎（解释器）来执行JS代码。JS引擎执行代码时<em><strong>逐行解释每一句源码（转换为机器语言），然后由计算机去执行</strong></em>，所以JavaScript语言归为脚本语言，会逐行解释执行。</p></blockquote>
<h1 id="js组成">JS组成</h1>
<h2 id="1ecmascript">1.ECMAScript</h2>
<ul>
<li>ECMAScript是由ECMA国际（原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为JavaScript或JScript，但实际上后两者是ECMAScript语言的实现和扩展。</li>
</ul>
<blockquote>
<p>ECMAScript:ECMAScript规定了JS的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套JS语法工业标准。</p></blockquote>
<h2 id="2dom文档对象模型">2.DOM——文档对象模型</h2>
<ul>
<li>文档对象模型（Document Object Model，简称DOM），是W3C组织推荐的处理可扩展标记语言的标准编程接口。</li>
<li>通过DOM提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。</li>
</ul>
<h2 id="3bom浏览器对象模型">3.BOM——浏览器对象模型</h2>
<ul>
<li>BOM（Browser Object Model，简称BOM）是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。</li>
<li>通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。</li>
</ul>
<!-- more -->
<h1 id="js有3种书写">JS有3种书写</h1>
<h2 id="1行内式js">1.行内式JS</h2>
<ul>
<li>可以将单行或少量JS代码写在HTML标签的事件属性中（以on开头的属性），如：onclick</li>
<li>注意单双引号的使用：在HTML中我们推荐使用双引号，JS中我们推荐使用<em><strong>单引号</strong></em></li>
<li>可读性差，在html中编写JS大量代码时，不方便阅读；</li>
<li>引号易错，引号多层嵌套匹配时，非常容易弄混；</li>
<li>特殊情况下使用</li>
</ul>
<h2 id="2内嵌js">2.内嵌JS</h2>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>	alert<span style="color:#f85149">（</span><span style="color:#a5d6ff">&#39;Hello World~！&#39;</span><span style="color:#f85149">）；</span>
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#7ee787">script</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>可以将多行JS代码写到<code>&lt;script&gt;</code>标签中</li>
<li>内嵌JS是学</li>
<li>习时常用的方式</li>
</ul>
<h2 id="3外部js文件">3.外部JS文件</h2>
<ul>
<li>利于HTML页面代码结构化，把大段JS代码独立到HTML页面之外，既美观，也方便文件级别的复用</li>
<li>引用外部JS文件的script标签中间不可以写代码</li>
<li>适合于JS代码量比较大的情况</li>
</ul>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span><span style="color:#8b949e;font-weight:bold;font-style:italic">&lt;!DOCTYPE html&gt;</span>
</span></span><span style="display:flex;"><span>&lt;<span style="color:#7ee787">html</span> lang<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;en&#34;</span>&gt;
</span></span><span style="display:flex;"><span>&lt;<span style="color:#7ee787">head</span>&gt;
</span></span><span style="display:flex;"><span>    &lt;<span style="color:#7ee787">meta</span> charset<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;UTF-8&#34;</span>&gt;
</span></span><span style="display:flex;"><span>    &lt;<span style="color:#7ee787">meta</span> name<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;viewport&#34;</span> content<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;width=device-width, initial-scale=1.0&#34;</span>&gt;
</span></span><span style="display:flex;"><span>    &lt;<span style="color:#7ee787">meta</span> http-equiv<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;X-UA-Compatible&#34;</span> content<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;ie=edge&#34;</span>&gt;
</span></span><span style="display:flex;"><span>    &lt;<span style="color:#7ee787">title</span>&gt;Document&lt;/<span style="color:#7ee787">title</span>&gt;
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic">&lt;!-- 2. 内嵌式的js --&gt;</span>
</span></span><span style="display:flex;"><span>    &lt;<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic">//alert(&#39;Hello&#39;)
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>    &lt;/<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>    &lt;<span style="color:#7ee787">script</span> src<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">&#34;my.js&#34;</span>&gt;&lt;/<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#7ee787">head</span>&gt;
</span></span><span style="display:flex;"><span>&lt;<span style="color:#7ee787">body</span>&gt;
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic">&lt;!-- 1. 行内式的JS 直接写到元素内部 --&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic">&lt;!-- &lt;input type=&#34;button&#34; value=&#34;Luenci&#34; onclick=&#34;alert(&#39;hello world&#39;)&#34;&gt;  --&gt;</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#7ee787">body</span>&gt;
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#7ee787">html</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="javascript注释">JavaScript注释</h1>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>//1.单行注释 ctrl + /
</span></span><span style="display:flex;"><span>/*2.多行注释默认的快捷键 shift + alt + a */
</span></span><span style="display:flex;"><span>2.多行注释vscode中修改多行注释的快捷键：ctrl + shift + /
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="javascript输入输出语句">JavaScript输入输出语句</h1>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic">// 这是一个输入框
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>        prompt(<span style="color:#a5d6ff">&#39;请输入您的年龄&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic">//alert 弹出警示框
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>        alert(<span style="color:#a5d6ff">&#39;计算的结果是：&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#8b949e;font-style:italic">// console 控制台输出 给程序员测试用
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>        console.log(<span style="color:#a5d6ff">&#39;我是程序员&#39;</span>)
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#7ee787">script</span>&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><h1 id="变量">变量</h1>
<h2 id="声明变量">声明变量</h2>
<ul>
<li>//声明变量
var age；//声明一个名称为age的变量</li>
<li><code>var</code>是一个JS<strong>关键字</strong>，用来声明变量（variable变量的意思）。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序最管</li>
<li>age是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间</li>
</ul>
<h2 id="变量命名规范">变量命名规范</h2>
<ul>
<li>由字母（A-Za-z）、数字（0-9）、下划线（）、美元符号（$）组
<ul>
<li>如：usrAge，num01，_name</li>
</ul>
</li>
<li>严格区分大小写。
<ul>
<li>var app；和var App；是两个变量</li>
</ul>
</li>
<li>不能以数字开头。
<ul>
<li>18age是错误的</li>
</ul>
</li>
<li>不能是关键字、保留字。
<ul>
<li>例如：var、for、while</li>
</ul>
</li>
<li>变量名必须有意义。
<ul>
<li>MMDBBD nl → age</li>
</ul>
</li>
<li>遵守驼峰命名法。
<ul>
<li>首字母小写，后面单词的首字母需要大写。myFirstName</li>
</ul>
</li>
</ul>
<h1 id="数据类型">数据类型</h1>
<blockquote>
<p>JavaScript是一种弱类型或者说动态语言。</p></blockquote>
<p>JS把数据类型分为两类</p>
<ul>
<li>简单数据类型（Number，string，Boolean，Undefined，Null）</li>
<li>复杂数据类型（object）</li>
</ul>
<p>###　数字型</p>
<blockquote>
<ul>
<li>Infinity，代表无穷大，大于任何数值</li>
<li>Infinity，代表无穷小，小于任何数值</li>
<li>NaN，Not a number，代表一个非数值</li>
<li>isNaN（）这个方法用来判断非数字并且返回一个值如果是数字返回的是false如果不是数字返Turn</li>
</ul></blockquote>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">var</span> num<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">1</span>e<span style="color:#f85149">；</span><span style="color:#8b949e;font-style:italic">//num 数字型
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>    <span style="color:#ff7b72">var</span> PI<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">3.14</span><span style="color:#8b949e;font-style:italic">//PI数字型
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>	<span style="color:#8b949e;font-style:italic">//1.八进制0~7我们程序里面数字前面加0表示八进制
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>    <span style="color:#ff7b72">var</span> numl<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">010</span><span style="color:#f85149">；</span>
</span></span><span style="display:flex;"><span>    console.<span style="color:#a5d6ff">1</span>og<span style="color:#f85149">（</span>num1<span style="color:#f85149">）；</span><span style="color:#8b949e;font-style:italic">// 010八进制转换为10进制就是8
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>	<span style="color:#ff7b72">var</span> num2<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">012</span><span style="color:#f85149">；</span>
</span></span><span style="display:flex;"><span>	console.<span style="color:#a5d6ff">1</span>og<span style="color:#f85149">（</span>num2<span style="color:#f85149">）；</span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">//2.十六进制e～9a~f#ffffff数字的前面加0x表示十六进制
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>    <span style="color:#ff7b72">var</span> num3<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">0x9</span><span style="color:#f85149">；</span>
</span></span><span style="display:flex;"><span>    console.<span style="color:#a5d6ff">1</span>og<span style="color:#f85149">（</span>num3<span style="color:#f85149">）；</span>
</span></span><span style="display:flex;"><span>    <span style="color:#ff7b72">var</span> num4<span style="color:#ff7b72;font-weight:bold">=</span><span style="color:#a5d6ff">0xa</span><span style="color:#f85149">；</span>
</span></span><span style="display:flex;"><span>    console.<span style="color:#a5d6ff">1</span>og<span style="color:#f85149">（</span>num4<span style="color:#f85149">）；</span>
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic">// 数字型的最大值
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>    console.log(Number.MAX_VALUE);
</span></span><span style="display:flex;"><span>    <span style="color:#8b949e;font-style:italic">// 数字型的最小值
</span></span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic"></span>    console.log(Number.MIN_VALUE);	
</span></span><span style="display:flex;"><span>&lt;/<span style="color:#7ee787">script</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>out:
</span></span><span style="display:flex;"><span>    8
</span></span><span style="display:flex;"><span>    10
</span></span><span style="display:flex;"><span>    9
</span></span><span style="display:flex;"><span>    10
</span></span><span style="display:flex;"><span>    1.7976931348623157e+308
</span></span><span style="display:flex;"><span>    5e-324
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="字符串型string">字符串型String</h3>
<ul>
<li>
<p>1.字符串引号嵌套</p>
<blockquote>
<p>JS可以用单引号嵌套双引号，或者用双引号嵌套单引号（外双内单，外单内双)</p></blockquote>
</li>
<li>
<p>2.字符串转义符</p>
</li>
<li>
<p>类似HTML里面的特殊字符，字符串中也有特殊字符，我们称之为转义符。</p>
</li>
<li>
<p>转义符都是<code>\</code>头的，常用的转义符及其说明如下：</p>
</li>
</ul>
<table>
  <thead>
      <tr>
          <th>转义符</th>
          <th>解释说明</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>\n</td>
          <td>换行符，n是newline的意思</td>
      </tr>
      <tr>
          <td>\</td>
          <td>斜杠 \</td>
      </tr>
      <tr>
          <td><code>\'</code></td>
          <td>单引号</td>
      </tr>
      <tr>
          <td><code>\&quot;</code></td>
          <td>双引号</td>
      </tr>
      <tr>
          <td>\t</td>
          <td>tab缩进</td>
      </tr>
      <tr>
          <td>\b</td>
          <td>空格，b是blank的意思</td>
      </tr>
  </tbody>
</table>
<h3 id="布尔型">布尔型</h3>
<ul>
<li>布尔类型有两个值：true和false，其中true表示真（对），而false表示假（错）。</li>
<li>布尔型和数字型相加的时候，true的值为1，false的值为0。</li>
</ul>
<h3 id="undefined-和null">Undefined 和Null</h3>
<ul>
<li>一个声明后没有被赋值的变量会有一个默认值undefined（如果进行相连或者相加时，注意结果）</li>
</ul>
<h2 id="数据类型的转换">数据类型的转换</h2>
<ul>
<li>转换为字符串类型</li>
</ul>
<table>
  <thead>
      <tr>
          <th>方式</th>
          <th>说明</th>
          <th>案例</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>toString()</td>
          <td>转成字符串</td>
          <td>var num=1; alert(num.toString()）</td>
      </tr>
      <tr>
          <td>String()强制转换</td>
          <td>转成字符串</td>
          <td>var num=1；alert(String(num))；</td>
      </tr>
      <tr>
          <td>加号拼接字符串</td>
          <td>和字符串拼接的结果都是字符串</td>
          <td>var num=1；alert(num+&ldquo;我是字符串”)；</td>
      </tr>
  </tbody>
</table>
<blockquote>
<p>toString()和String()使用方式不一样。
三种转换方式，我们更喜欢用第三种加号拼接字符串转换方式，这一种方式也称之为隐式转换。</p></blockquote>
<ul>
<li>转换为数字型</li>
</ul>
<table>
  <thead>
      <tr>
          <th>方式</th>
          <th>方式</th>
          <th>案例</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>parselnt(string)函数</td>
          <td>将string类型转成整数数值型</td>
          <td>parselnt(‘78’)</td>
      </tr>
      <tr>
          <td>parseFloat（string）函数</td>
          <td>将string类型转成浮点数数值型</td>
          <td>parseFloat（&ldquo;78.21&rdquo;）</td>
      </tr>
      <tr>
          <td>Number（）强制转换函数</td>
          <td>将string类型转换为数值型</td>
          <td>Number(&lsquo;12&rsquo;)</td>
      </tr>
      <tr>
          <td>js隐式转换（- * / ）</td>
          <td>利用算术运算隐式转换为数值型</td>
          <td>&lsquo;12&rsquo; - 0</td>
      </tr>
  </tbody>
</table>
<ul>
<li>转换为布尔型</li>
</ul>
<table>
  <thead>
      <tr>
          <th>方式</th>
          <th>说明</th>
          <th>案例</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>Boolean()函数</td>
          <td>其他类型转成布尔值</td>
          <td>Boolean(&lsquo;var&rsquo;);</td>
      </tr>
  </tbody>
</table>
<ul>
<li>代表空、否定的值会被转换为false
<ul>
<li>如”、0、NaN、null、undefined</li>
</ul>
</li>
<li>其余值都会被转换为true</li>
</ul>
<h1 id="编译型语言和解释型语言">编译型语言和解释型语言</h1>
<ul>
<li>编译器
<ul>
<li>在代码执行之前进行编译，生成中间代码文件</li>
</ul>
</li>
<li>解释器
<ul>
<li>在运行时进行及时解释，并立即执行（当编译器以解释方式运行的时候，也称之为解释器）</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>
