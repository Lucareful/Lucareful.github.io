<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>MCP on Luenci</title>
    <link>https://luenci.com/en/categories/mcp/</link>
    <description>Recent content in MCP on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 22 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://luenci.com/en/categories/mcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MCP 入门（协议篇）</title>
      <link>https://luenci.com/en/posts/mcp%E5%85%A5%E9%97%A8%E5%8D%8F%E8%AE%AE%E7%AF%87/</link>
      <pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/mcp%E5%85%A5%E9%97%A8%E5%8D%8F%E8%AE%AE%E7%AF%87/</guid>
      <description>&lt;h1 id=&#34;mcp-入门--json-rpc-20-协议&#34;&gt;MCP 入门 —— （JSON-RPC 2.0 协议）&lt;/h1&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;​	&lt;em&gt;JSON-RPC是一个无状态且轻量级的远程过程调用(RPC)协议&lt;/em&gt;**&lt;/p&gt;
&lt;p&gt;​	在AI技术飞速演进的今天，底层通信协议的选择对系统效率和互操作性至关重要。新兴的AI协议如&lt;strong&gt;模型上下文协议（MCP）&lt;/strong&gt;[1]和 &lt;strong&gt;Agent2Agent（A2A）&lt;/strong&gt;[2]协议，都使用了 JSON-RPC 2.0 协议&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="mcp-入门--json-rpc-20-协议">MCP 入门 —— （JSON-RPC 2.0 协议）</h1>
<h2 id="简介">简介</h2>
<p>​	<em>JSON-RPC是一个无状态且轻量级的远程过程调用(RPC)协议</em>**</p>
<p>​	在AI技术飞速演进的今天，底层通信协议的选择对系统效率和互操作性至关重要。新兴的AI协议如<strong>模型上下文协议（MCP）</strong>[1]和 <strong>Agent2Agent（A2A）</strong>[2]协议，都使用了 JSON-RPC 2.0 协议</p>
<h2 id="协议">协议</h2>
<h3 id="1-json-rpc-20起源与核心规范"><strong>1. JSON-RPC 2.0：起源与核心规范</strong></h3>
<p>​	JSON-RPC协议的诞生，源于对早期RPC协议（如<strong>XML-RPC</strong>[4]、<strong>SOAP</strong>[5]）复杂性的反思，旨在提供一种<strong>更轻量、更简洁</strong>的远程过程调用机制。其2.0版本规范（基于2009年草案，正式发布于2010年左右）更是将这一理念发扬光大。其核心设计哲学正如规范开篇所言：<strong>&ldquo;It is designed to be simple!&rdquo;</strong></p>
<h4 id="核心原则"><strong>核心原则</strong></h4>
<p>我们先来看一下JSON-RPC协议设计的几个核心原则。</p>
<ul>
<li><strong>Stateless (无状态):</strong> 每次请求都是独立的，服务器不保存客户端状态。</li>
<li><strong>Light-weight (轻量级):</strong> 协议开销小，消息体紧凑。</li>
<li><strong>JSON Data Format (JSON数据格式):</strong> 使用广泛流行、易于解析和人类可读的JSON(RFC 4627[6]) 作为数据交换格式。</li>
<li><strong>Transport Agnostic (传输无关):</strong> 协议本身不限定网络传输方式，可在HTTP、WebSocket[7]、TCP、甚至进程内等多种环境使用。</li>
</ul>
<h4 id="请求对象">请求对象</h4>
<p>一个 JSON-RPC 2.0 请求数据是一个单一的 JSON 对象，可以包含以下成员：</p>
<ul>
<li>
<p>jsonrpc：字符串，指定 JSON-RPC 的版本号，对于 2.0 规范来说，这个值必须是 2.0。</p>
</li>
<li>
<p>method：字符串，指定要调用的远程方法的名称。</p>
</li>
<li>
<p>params：结构化值，可以是数组或者对象，传递给远程方法的参数。如果方法不需要参数可以省略。</p>
</li>
<li>
<p>id：唯一标识符，可以是字符串或数字，用于关联请求和响应，服务端必须返回相同的值。如果请求是一个通知类型，则此参数可以被省略</p>
</li>
</ul>
<p>一个标准的 JSON-RPC 2.0 请求示例如下：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;method&#34;</span>: <span style="color:#a5d6ff">&#34;subtract&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;params&#34;</span>: [<span style="color:#a5d6ff">42</span>, <span style="color:#a5d6ff">23</span>],
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;id&#34;</span>: <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="响应对象">响应对象</h4>
<p>一个 JSON-RPC 2.0 响应数据也是一个单一的 JSON 对象，可以包含以下成员：</p>
<ul>
<li>jsonrpc：字符串，指定 JSON-RPC 的版本号，对于 2.0 规范来说，这个值必须是2.0。</li>
<li>result：当请求成功时，包含由远程方法返回的结果。如果请求失败，则不包含此成员。</li>
<li>error：当请求失败时，包含一个错误对象。如果请求成功，则不包含此成员。</li>
<li>id：与请求中的 id 相同，用于识别哪个请求对应的响应。</li>
</ul>
<p>错误对象包括以下成员：</p>
<ul>
<li>code：整数，用于说明错误类型。JSON-RPC 2.0 定义了一组标准的错误码。</li>
<li>message：字符串，提供关于错误的简短描述。</li>
<li>data：可选，可以包含额外的错误信息，比如堆栈信息等。</li>
</ul>
<p>一个成功的响应示例如下：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;result&#34;</span>: <span style="color:#a5d6ff">19</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;id&#34;</span>: <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><p>而一个异常响应示例如下：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;error&#34;</span>: {
</span></span><span style="display:flex;"><span>				<span style="color:#7ee787">&#34;code&#34;</span>: <span style="color:#a5d6ff">-32601</span>,
</span></span><span style="display:flex;"><span>				<span style="color:#7ee787">&#34;message&#34;</span>: <span style="color:#a5d6ff">&#34;Method not found&#34;</span>
</span></span><span style="display:flex;"><span>		},
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;id&#34;</span>: <span style="color:#a5d6ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="通知">通知</h4>
<p>​	通知是一种特殊类型的请求，没有 id 成员，因此不会得到响应。这样客户端可以向服务器发送事件或命令而无需等待回复。一个通知示例如下：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;method&#34;</span>: <span style="color:#a5d6ff">&#34;updateStatus&#34;</span>,
</span></span><span style="display:flex;"><span>		<span style="color:#7ee787">&#34;params&#34;</span>: [<span style="color:#a5d6ff">&#34;online&#34;</span>]
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="批量请求">批量请求</h4>
<p>​	JSON-RPC 2.0 支持批量请求，即可以在单个请求中发送多个 JSON-RPC 调用。每个调用都是独立的 JSON-RPC 请求对象，被放在一个数组中。服务器处理这些请求后返回一个数组，其中每个元素对应于一个调用。需要注意的是，如果其中一个调用是通知，则不会有对应的响应项。</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;method&#34;</span>: <span style="color:#a5d6ff">&#34;sum&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;params&#34;</span>: [<span style="color:#a5d6ff">1</span>, <span style="color:#a5d6ff">3</span>, <span style="color:#a5d6ff">5</span>, <span style="color:#a5d6ff">7</span>, <span style="color:#a5d6ff">9</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;id&#34;</span>: <span style="color:#a5d6ff">&#34;1&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;method&#34;</span>: <span style="color:#a5d6ff">&#34;notify_hello&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;params&#34;</span>: [<span style="color:#a5d6ff">&#34;Alice&#34;</span>]
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  {
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;method&#34;</span>: <span style="color:#a5d6ff">&#34;subtract&#34;</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;params&#34;</span>: [<span style="color:#a5d6ff">42</span>, <span style="color:#a5d6ff">23</span>],
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;id&#34;</span>: <span style="color:#a5d6ff">&#34;2&#34;</span>
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>]
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="错误码">错误码</h4>
<p>​	JSON-RPC 2.0 规范中定义了标准的错误码，但开发者也可以根据自己的业务逻辑添加自定义的错误码。这些自定义错误代码应该在-32000到-32099之间，以避免与标准错误码冲突。通过使用自定义错误码，可以为客户端提供更加具体的错误信息。</p>
<p>​	假如这样一个场景，应用程序需要处理用户认证失败的情况，可以定义一个特定的错误码，比如 -32001，并为这个错误码配一个说明，如 Authentication failed。示例如下：</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#7ee787">&#34;jsonrpc&#34;</span>: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#7ee787">&#34;error&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;code&#34;</span>: <span style="color:#a5d6ff">-32001</span>,
</span></span><span style="display:flex;"><span>    <span style="color:#7ee787">&#34;message&#34;</span>: <span style="color:#a5d6ff">&#34;Authentication failed&#34;</span>
</span></span><span style="display:flex;"><span>  },
</span></span><span style="display:flex;"><span>  <span style="color:#7ee787">&#34;id&#34;</span>: <span style="color:#a5d6ff">&#34;1&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><p>此外，还可以在  error 的 data 参数中包含更多的错误细节，比如错误发生的具体位置或建议的解决方法。</p>
<p>JSON-RPC 2.0 定义的标准错误码如下（自定义错误吗不要使用如下几个）：</p>
<ul>
<li>
<p>32700: 解析错误，服务器收到无效的 JSON。</p>
</li>
<li>
<p>32600: 无效请求，发送的 JSON 不是有效的请求对象。</p>
</li>
<li>
<p>32601: 方法未找到，方法不存在或无效。</p>
</li>
<li>
<p>32602: 无效参数，提供的参数无效。</p>
</li>
<li>
<p>32603: 内部错误，JSON-RPC 内部错误。</p>
</li>
</ul>
<h3 id="2go实现案例基于-http">2.GO实现案例——基于 http</h3>
<p>client 端</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">34
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">35
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">36
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">37
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">38
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">39
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">40
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">41
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">42
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">43
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">44
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">45
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">46
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">47
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">48
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">49
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">50
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">51
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">52
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">53
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">54
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">55
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">56
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#ff7b72">package</span> main
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">import</span> (
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;context&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;fmt&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;github.com/ybbus/jsonrpc/v3&#34;</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">type</span> Person <span style="color:#ff7b72">struct</span> {
</span></span><span style="display:flex;"><span>	ID   <span style="color:#ff7b72">int</span>    <span style="color:#a5d6ff">`json:&#34;id&#34;`</span>
</span></span><span style="display:flex;"><span>	Name <span style="color:#ff7b72">string</span> <span style="color:#a5d6ff">`json:&#34;name&#34;`</span>
</span></span><span style="display:flex;"><span>	Age  <span style="color:#ff7b72">int</span>    <span style="color:#a5d6ff">`json:&#34;age&#34;`</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">func</span> <span style="color:#d2a8ff;font-weight:bold">main</span>() {
</span></span><span style="display:flex;"><span>	fmt.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;Starting JSON-RPC client...&#34;</span>)
</span></span><span style="display:flex;"><span>	rpcClient <span style="color:#ff7b72;font-weight:bold">:=</span> jsonrpc.<span style="color:#d2a8ff;font-weight:bold">NewClient</span>(<span style="color:#a5d6ff">&#34;http://localhost:8080/rpc&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	res, err <span style="color:#ff7b72;font-weight:bold">:=</span> rpcClient.<span style="color:#d2a8ff;font-weight:bold">Call</span>(context.<span style="color:#d2a8ff;font-weight:bold">Background</span>(), <span style="color:#a5d6ff">&#34;echo&#34;</span>, <span style="color:#a5d6ff">&#34;JSON-RPC!&#34;</span>)
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>		fmt.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;Error:&#34;</span>, err)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	fmt.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;Response:{jsonrpc:&#34;</span>, res.JSONRPC, <span style="color:#a5d6ff">&#34;, id:&#34;</span>, res.ID, <span style="color:#a5d6ff">&#34;, result:&#34;</span>, res.Result, <span style="color:#a5d6ff">&#34;, error:&#34;</span>, res.Error, <span style="color:#a5d6ff">&#34;}&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	fmt.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;==========================&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	response, err <span style="color:#ff7b72;font-weight:bold">:=</span> rpcClient.<span style="color:#d2a8ff;font-weight:bold">CallBatchRaw</span>(context.<span style="color:#d2a8ff;font-weight:bold">Background</span>(), []<span style="color:#ff7b72;font-weight:bold">*</span>jsonrpc.RPCRequest{
</span></span><span style="display:flex;"><span>		{
</span></span><span style="display:flex;"><span>			Method:  <span style="color:#a5d6ff">&#34;echo&#34;</span>,
</span></span><span style="display:flex;"><span>			ID:      <span style="color:#a5d6ff">1</span>,
</span></span><span style="display:flex;"><span>			Params:  []<span style="color:#ff7b72">interface</span>{}{<span style="color:#a5d6ff">&#34;JSON-RPC1!&#34;</span>},
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		},
</span></span><span style="display:flex;"><span>		{
</span></span><span style="display:flex;"><span>			Method:  <span style="color:#a5d6ff">&#34;echo&#34;</span>,
</span></span><span style="display:flex;"><span>			ID:      <span style="color:#a5d6ff">2</span>,
</span></span><span style="display:flex;"><span>			Params:  []<span style="color:#ff7b72">interface</span>{}{<span style="color:#a5d6ff">&#34;JSON-RPC2!&#34;</span>},
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		},
</span></span><span style="display:flex;"><span>		{
</span></span><span style="display:flex;"><span>			Method:  <span style="color:#a5d6ff">&#34;echo&#34;</span>,
</span></span><span style="display:flex;"><span>			ID:      <span style="color:#a5d6ff">3</span>,
</span></span><span style="display:flex;"><span>			Params:  []<span style="color:#ff7b72">interface</span>{}{<span style="color:#a5d6ff">&#34;JSON-RPC3!&#34;</span>},
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		},
</span></span><span style="display:flex;"><span>	})
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>		fmt.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;Error:&#34;</span>, err)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">for</span> _, res <span style="color:#ff7b72;font-weight:bold">:=</span> <span style="color:#ff7b72">range</span> response {
</span></span><span style="display:flex;"><span>		fmt.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;Response:{jsonrpc:&#34;</span>, res.JSONRPC, <span style="color:#a5d6ff">&#34;, id:&#34;</span>, res.ID, <span style="color:#a5d6ff">&#34;, result:&#34;</span>, res.Result, <span style="color:#a5d6ff">&#34;, error:&#34;</span>, res.Error, <span style="color:#a5d6ff">&#34;}&#34;</span>)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><p>server 端</p>
<div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  8
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">  9
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 10
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 11
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 12
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 13
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 14
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 15
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 16
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 17
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 18
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 19
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 20
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 21
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 22
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 23
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 24
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 25
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 26
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 27
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 28
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 29
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 30
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 31
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 32
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 33
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 34
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 35
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 36
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 37
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 38
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 39
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 40
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 41
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 42
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 43
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 44
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 45
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 46
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 47
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 48
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 49
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 50
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 51
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 52
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 53
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 54
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 55
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 56
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 57
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 58
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 59
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 60
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 61
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 62
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 63
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 64
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 65
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 66
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 67
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 68
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 69
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 70
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 71
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 72
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 73
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 74
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 75
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 76
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 77
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 78
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 79
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 80
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 81
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 82
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 83
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 84
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 85
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 86
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 87
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 88
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 89
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 90
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 91
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 92
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 93
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 94
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 95
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 96
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 97
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 98
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679"> 99
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">100
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">101
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">102
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">103
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">104
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">105
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">106
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">107
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">108
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">109
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">110
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">111
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">112
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">113
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">114
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">115
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">116
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">117
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">118
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">119
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">120
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">121
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">122
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">123
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">124
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">125
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">126
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">127
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">128
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">129
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">130
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">131
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">132
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">133
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">134
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">135
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">136
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">137
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">138
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">139
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">140
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">141
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">142
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">143
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">144
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">145
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">146
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">147
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">148
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">149
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">150
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">151
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">152
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">153
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">154
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">155
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">156
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">157
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">158
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">159
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">160
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">161
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">162
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">163
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">164
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">165
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">166
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">167
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">168
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">169
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">170
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">171
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">172
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">173
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">174
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">175
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">176
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">177
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">178
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">179
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">180
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">181
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">182
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">183
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">184
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">185
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">186
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">187
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">188
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">189
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">190
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#ff7b72">package</span> main
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">import</span> (
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;encoding/json&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;fmt&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;io&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;log&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;net/http&#34;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a5d6ff">&#34;time&#34;</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// JSON-RPC 请求结构</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">type</span> JSONRPCRequest <span style="color:#ff7b72">struct</span> {
</span></span><span style="display:flex;"><span>	JSONRPC <span style="color:#ff7b72">string</span>          <span style="color:#a5d6ff">`json:&#34;jsonrpc&#34;`</span>
</span></span><span style="display:flex;"><span>	Method  <span style="color:#ff7b72">string</span>          <span style="color:#a5d6ff">`json:&#34;method&#34;`</span>
</span></span><span style="display:flex;"><span>	Params  json.RawMessage <span style="color:#a5d6ff">`json:&#34;params&#34;`</span>
</span></span><span style="display:flex;"><span>	ID      <span style="color:#ff7b72">interface</span>{}     <span style="color:#a5d6ff">`json:&#34;id&#34;`</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// JSON-RPC 响应结构</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">type</span> JSONRPCResponse <span style="color:#ff7b72">struct</span> {
</span></span><span style="display:flex;"><span>	JSONRPC <span style="color:#ff7b72">string</span>      <span style="color:#a5d6ff">`json:&#34;jsonrpc&#34;`</span>
</span></span><span style="display:flex;"><span>	Result  <span style="color:#ff7b72">interface</span>{} <span style="color:#a5d6ff">`json:&#34;result,omitempty&#34;`</span>
</span></span><span style="display:flex;"><span>	Error   <span style="color:#ff7b72;font-weight:bold">*</span>RPCError   <span style="color:#a5d6ff">`json:&#34;error,omitempty&#34;`</span>
</span></span><span style="display:flex;"><span>	ID      <span style="color:#ff7b72">interface</span>{} <span style="color:#a5d6ff">`json:&#34;id&#34;`</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// 错误结构</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">type</span> RPCError <span style="color:#ff7b72">struct</span> {
</span></span><span style="display:flex;"><span>	Code    <span style="color:#ff7b72">int</span>         <span style="color:#a5d6ff">`json:&#34;code&#34;`</span>
</span></span><span style="display:flex;"><span>	Message <span style="color:#ff7b72">string</span>      <span style="color:#a5d6ff">`json:&#34;message&#34;`</span>
</span></span><span style="display:flex;"><span>	Data    <span style="color:#ff7b72">interface</span>{} <span style="color:#a5d6ff">`json:&#34;data,omitempty&#34;`</span> <span style="color:#8b949e;font-style:italic">// 添加可选的错误数据字段</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// 标准错误代码常量</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">const</span> (
</span></span><span style="display:flex;"><span>	ParseErrorCode     = <span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">32700</span>
</span></span><span style="display:flex;"><span>	InvalidRequestCode = <span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">32600</span>
</span></span><span style="display:flex;"><span>	MethodNotFoundCode = <span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">32601</span>
</span></span><span style="display:flex;"><span>	InvalidParamsCode  = <span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">32602</span>
</span></span><span style="display:flex;"><span>	InternalErrorCode  = <span style="color:#ff7b72;font-weight:bold">-</span><span style="color:#a5d6ff">32603</span>
</span></span><span style="display:flex;"><span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// 处理 JSON-RPC 方法</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">func</span> <span style="color:#d2a8ff;font-weight:bold">handleRPCMethod</span>(method <span style="color:#ff7b72">string</span>, params json.RawMessage) (<span style="color:#ff7b72">interface</span>{}, <span style="color:#ff7b72;font-weight:bold">*</span>RPCError) {
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">switch</span> method {
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">case</span> <span style="color:#a5d6ff">&#34;add&#34;</span>:
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">var</span> numbers []<span style="color:#ff7b72">int</span>
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">:=</span> json.<span style="color:#d2a8ff;font-weight:bold">Unmarshal</span>(params, <span style="color:#ff7b72;font-weight:bold">&amp;</span>numbers); err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#ff7b72">return</span> <span style="color:#79c0ff">nil</span>, <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: InvalidParamsCode, Message: <span style="color:#a5d6ff">&#34;Invalid params&#34;</span>}
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">if</span> len(numbers) <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#a5d6ff">2</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#ff7b72">return</span> <span style="color:#79c0ff">nil</span>, <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: InvalidParamsCode, Message: <span style="color:#a5d6ff">&#34;Expected two parameters&#34;</span>}
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span> numbers[<span style="color:#a5d6ff">0</span>] <span style="color:#ff7b72;font-weight:bold">+</span> numbers[<span style="color:#a5d6ff">1</span>], <span style="color:#79c0ff">nil</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">case</span> <span style="color:#a5d6ff">&#34;echo&#34;</span>:
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">var</span> message []<span style="color:#ff7b72">string</span>
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">:=</span> json.<span style="color:#d2a8ff;font-weight:bold">Unmarshal</span>(params, <span style="color:#ff7b72;font-weight:bold">&amp;</span>message); err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#ff7b72">return</span> <span style="color:#79c0ff">nil</span>, <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: InvalidParamsCode, Message: <span style="color:#a5d6ff">&#34;Invalid params&#34;</span>}
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">if</span> len(message) <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">0</span> {
</span></span><span style="display:flex;"><span>			<span style="color:#ff7b72">return</span> <span style="color:#79c0ff">nil</span>, <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: InvalidParamsCode, Message: <span style="color:#a5d6ff">&#34;Expected at least one parameter&#34;</span>}
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span> fmt.<span style="color:#d2a8ff;font-weight:bold">Sprintf</span>(<span style="color:#a5d6ff">&#34;hello %v&#34;</span>, message[<span style="color:#a5d6ff">0</span>]), <span style="color:#79c0ff">nil</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">case</span> <span style="color:#a5d6ff">&#34;time&#34;</span>:
</span></span><span style="display:flex;"><span>		<span style="color:#8b949e;font-style:italic">// 添加一个新方法，返回当前服务器时间</span>
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span> time.<span style="color:#d2a8ff;font-weight:bold">Now</span>().<span style="color:#d2a8ff;font-weight:bold">Format</span>(time.RFC3339), <span style="color:#79c0ff">nil</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">default</span>:
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span> <span style="color:#79c0ff">nil</span>, <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: MethodNotFoundCode, Message: <span style="color:#a5d6ff">&#34;Method not found&#34;</span>}
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// 处理单个JSON-RPC请求</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">func</span> <span style="color:#d2a8ff;font-weight:bold">processRequest</span>(req JSONRPCRequest) JSONRPCResponse {
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 日志记录请求</span>
</span></span><span style="display:flex;"><span>	log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Processing request: method=%s, id=%v&#34;</span>, req.Method, req.ID)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> req.JSONRPC <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#a5d6ff">&#34;2.0&#34;</span> {
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span> JSONRPCResponse{
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>			Error:   <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: InvalidRequestCode, Message: <span style="color:#a5d6ff">&#34;Invalid Request: expected jsonrpc=2.0&#34;</span>},
</span></span><span style="display:flex;"><span>			ID:      req.ID,
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	result, rpcError <span style="color:#ff7b72;font-weight:bold">:=</span> <span style="color:#d2a8ff;font-weight:bold">handleRPCMethod</span>(req.Method, req.Params)
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 日志记录响应</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> rpcError <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Request error: method=%s, id=%v, error=%s&#34;</span>, req.Method, req.ID, rpcError.Message)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">return</span> JSONRPCResponse{
</span></span><span style="display:flex;"><span>		JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>		Result:  result,
</span></span><span style="display:flex;"><span>		Error:   rpcError,
</span></span><span style="display:flex;"><span>		ID:      req.ID,
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// 请求日志中间件</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">func</span> <span style="color:#d2a8ff;font-weight:bold">loggingMiddleware</span>(next http.HandlerFunc) http.HandlerFunc {
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">return</span> <span style="color:#ff7b72">func</span>(w http.ResponseWriter, r <span style="color:#ff7b72;font-weight:bold">*</span>http.Request) {
</span></span><span style="display:flex;"><span>		start <span style="color:#ff7b72;font-weight:bold">:=</span> time.<span style="color:#d2a8ff;font-weight:bold">Now</span>()
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Received %s request from %s&#34;</span>, r.Method, r.RemoteAddr)
</span></span><span style="display:flex;"><span>		<span style="color:#d2a8ff;font-weight:bold">next</span>(w, r)
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Completed in %v&#34;</span>, time.<span style="color:#d2a8ff;font-weight:bold">Since</span>(start))
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#8b949e;font-style:italic">// JSON-RPC 请求处理函数</span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">func</span> <span style="color:#d2a8ff;font-weight:bold">rpcHandler</span>(w http.ResponseWriter, r <span style="color:#ff7b72;font-weight:bold">*</span>http.Request) {
</span></span><span style="display:flex;"><span>	w.<span style="color:#d2a8ff;font-weight:bold">Header</span>().<span style="color:#d2a8ff;font-weight:bold">Set</span>(<span style="color:#a5d6ff">&#34;Content-Type&#34;</span>, <span style="color:#a5d6ff">&#34;application/json&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> r.Method <span style="color:#ff7b72;font-weight:bold">!=</span> http.MethodPost {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Invalid HTTP method: %s&#34;</span>, r.Method)
</span></span><span style="display:flex;"><span>		http.<span style="color:#d2a8ff;font-weight:bold">Error</span>(w, <span style="color:#a5d6ff">&#34;Only POST method is allowed&#34;</span>, http.StatusMethodNotAllowed)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 读取请求体</span>
</span></span><span style="display:flex;"><span>	body, err <span style="color:#ff7b72;font-weight:bold">:=</span> io.<span style="color:#d2a8ff;font-weight:bold">ReadAll</span>(r.Body)
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Error reading request body: %v&#34;</span>, err)
</span></span><span style="display:flex;"><span>		resp <span style="color:#ff7b72;font-weight:bold">:=</span> JSONRPCResponse{
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>			Error:   <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: ParseErrorCode, Message: <span style="color:#a5d6ff">&#34;Parse error: could not read request body&#34;</span>},
</span></span><span style="display:flex;"><span>			ID:      <span style="color:#79c0ff">nil</span>,
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		json.<span style="color:#d2a8ff;font-weight:bold">NewEncoder</span>(w).<span style="color:#d2a8ff;font-weight:bold">Encode</span>(resp)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 请求体为空检查</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> len(body) <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#a5d6ff">0</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Print</span>(<span style="color:#a5d6ff">&#34;Empty request body&#34;</span>)
</span></span><span style="display:flex;"><span>		resp <span style="color:#ff7b72;font-weight:bold">:=</span> JSONRPCResponse{
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>			Error:   <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: InvalidRequestCode, Message: <span style="color:#a5d6ff">&#34;Invalid Request: empty body&#34;</span>},
</span></span><span style="display:flex;"><span>			ID:      <span style="color:#79c0ff">nil</span>,
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		json.<span style="color:#d2a8ff;font-weight:bold">NewEncoder</span>(w).<span style="color:#d2a8ff;font-weight:bold">Encode</span>(resp)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 尝试解析为批量请求</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">var</span> batchReq []JSONRPCRequest
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">:=</span> json.<span style="color:#d2a8ff;font-weight:bold">Unmarshal</span>(body, <span style="color:#ff7b72;font-weight:bold">&amp;</span>batchReq); err <span style="color:#ff7b72;font-weight:bold">==</span> <span style="color:#79c0ff">nil</span> <span style="color:#ff7b72;font-weight:bold">&amp;&amp;</span> len(batchReq) &gt; <span style="color:#a5d6ff">0</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;Processing batch request with %d items&#34;</span>, len(batchReq))
</span></span><span style="display:flex;"><span>		<span style="color:#8b949e;font-style:italic">// 批量请求处理</span>
</span></span><span style="display:flex;"><span>		responses <span style="color:#ff7b72;font-weight:bold">:=</span> make([]JSONRPCResponse, len(batchReq))
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">for</span> i, req <span style="color:#ff7b72;font-weight:bold">:=</span> <span style="color:#ff7b72">range</span> batchReq {
</span></span><span style="display:flex;"><span>			responses[i] = <span style="color:#d2a8ff;font-weight:bold">processRequest</span>(req)
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		json.<span style="color:#d2a8ff;font-weight:bold">NewEncoder</span>(w).<span style="color:#d2a8ff;font-weight:bold">Encode</span>(responses)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 尝试解析为单个请求</span>
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">var</span> singleReq JSONRPCRequest
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">:=</span> json.<span style="color:#d2a8ff;font-weight:bold">Unmarshal</span>(body, <span style="color:#ff7b72;font-weight:bold">&amp;</span>singleReq); err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Printf</span>(<span style="color:#a5d6ff">&#34;JSON parse error: %v&#34;</span>, err)
</span></span><span style="display:flex;"><span>		resp <span style="color:#ff7b72;font-weight:bold">:=</span> JSONRPCResponse{
</span></span><span style="display:flex;"><span>			JSONRPC: <span style="color:#a5d6ff">&#34;2.0&#34;</span>,
</span></span><span style="display:flex;"><span>			Error:   <span style="color:#ff7b72;font-weight:bold">&amp;</span>RPCError{Code: ParseErrorCode, Message: <span style="color:#a5d6ff">&#34;Parse error: invalid JSON&#34;</span>},
</span></span><span style="display:flex;"><span>			ID:      <span style="color:#79c0ff">nil</span>,
</span></span><span style="display:flex;"><span>		}
</span></span><span style="display:flex;"><span>		json.<span style="color:#d2a8ff;font-weight:bold">NewEncoder</span>(w).<span style="color:#d2a8ff;font-weight:bold">Encode</span>(resp)
</span></span><span style="display:flex;"><span>		<span style="color:#ff7b72">return</span>
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 处理单个请求</span>
</span></span><span style="display:flex;"><span>	log.<span style="color:#d2a8ff;font-weight:bold">Print</span>(<span style="color:#a5d6ff">&#34;Processing single request&#34;</span>)
</span></span><span style="display:flex;"><span>	resp <span style="color:#ff7b72;font-weight:bold">:=</span> <span style="color:#d2a8ff;font-weight:bold">processRequest</span>(singleReq)
</span></span><span style="display:flex;"><span>	json.<span style="color:#d2a8ff;font-weight:bold">NewEncoder</span>(w).<span style="color:#d2a8ff;font-weight:bold">Encode</span>(resp)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ff7b72">func</span> <span style="color:#d2a8ff;font-weight:bold">main</span>() {
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 添加日志配置</span>
</span></span><span style="display:flex;"><span>	log.<span style="color:#d2a8ff;font-weight:bold">SetFlags</span>(log.Ldate | log.Ltime | log.Lshortfile)
</span></span><span style="display:flex;"><span>	log.<span style="color:#d2a8ff;font-weight:bold">SetPrefix</span>(<span style="color:#a5d6ff">&#34;JSON-RPC: &#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#8b949e;font-style:italic">// 使用中间件包装处理函数</span>
</span></span><span style="display:flex;"><span>	http.<span style="color:#d2a8ff;font-weight:bold">HandleFunc</span>(<span style="color:#a5d6ff">&#34;/rpc&#34;</span>, <span style="color:#d2a8ff;font-weight:bold">loggingMiddleware</span>(rpcHandler))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	log.<span style="color:#d2a8ff;font-weight:bold">Println</span>(<span style="color:#a5d6ff">&#34;JSON-RPC 服务端已启动，地址：http://localhost:8080/rpc&#34;</span>)
</span></span><span style="display:flex;"><span>	<span style="color:#ff7b72">if</span> err <span style="color:#ff7b72;font-weight:bold">:=</span> http.<span style="color:#d2a8ff;font-weight:bold">ListenAndServe</span>(<span style="color:#a5d6ff">&#34;:8080&#34;</span>, <span style="color:#79c0ff">nil</span>); err <span style="color:#ff7b72;font-weight:bold">!=</span> <span style="color:#79c0ff">nil</span> {
</span></span><span style="display:flex;"><span>		log.<span style="color:#d2a8ff;font-weight:bold">Fatalf</span>(<span style="color:#a5d6ff">&#34;服务器启动失败: %v&#34;</span>, err)
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
<table style="border-spacing:0;padding:0;margin:0;border:0;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">1
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">2
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">3
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">4
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">5
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">6
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">7
</span><span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#737679">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span><span style="color:#f85149">outpu：</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f85149">Starting</span> <span style="color:#f85149">JSON-RPC</span> <span style="color:#f85149">client...</span>
</span></span><span style="display:flex;"><span><span style="color:#f85149">Response:</span>{<span style="color:#f85149">jsonrpc:</span> <span style="color:#f85149">2.0</span> <span style="color:#f85149">,</span> <span style="color:#f85149">id:</span> <span style="color:#f85149">0</span> <span style="color:#f85149">,</span> <span style="color:#f85149">result:</span> <span style="color:#f85149">hello</span> <span style="color:#f85149">JSON-RPC!</span> <span style="color:#f85149">,</span> <span style="color:#f85149">error:</span> <span style="color:#f85149">&lt;nil&gt;</span> }
</span></span><span style="display:flex;"><span><span style="color:#f85149">==========================</span>
</span></span><span style="display:flex;"><span><span style="color:#f85149">Response:</span>{<span style="color:#f85149">jsonrpc:</span> <span style="color:#f85149">2.0</span> <span style="color:#f85149">,</span> <span style="color:#f85149">id:</span> <span style="color:#f85149">1</span> <span style="color:#f85149">,</span> <span style="color:#f85149">result:</span> <span style="color:#f85149">hello</span> <span style="color:#f85149">JSON-RPC1!</span> <span style="color:#f85149">,</span> <span style="color:#f85149">error:</span> <span style="color:#f85149">&lt;nil&gt;</span> }
</span></span><span style="display:flex;"><span><span style="color:#f85149">Response:</span>{<span style="color:#f85149">jsonrpc:</span> <span style="color:#f85149">2.0</span> <span style="color:#f85149">,</span> <span style="color:#f85149">id:</span> <span style="color:#f85149">2</span> <span style="color:#f85149">,</span> <span style="color:#f85149">result:</span> <span style="color:#f85149">hello</span> <span style="color:#f85149">JSON-RPC2!</span> <span style="color:#f85149">,</span> <span style="color:#f85149">error:</span> <span style="color:#f85149">&lt;nil&gt;</span> }
</span></span><span style="display:flex;"><span><span style="color:#f85149">Response:</span>{<span style="color:#f85149">jsonrpc:</span> <span style="color:#f85149">2.0</span> <span style="color:#f85149">,</span> <span style="color:#f85149">id:</span> <span style="color:#f85149">3</span> <span style="color:#f85149">,</span> <span style="color:#f85149">result:</span> <span style="color:#f85149">hello</span> <span style="color:#f85149">JSON-RPC3!</span> <span style="color:#f85149">,</span> <span style="color:#f85149">error:</span> <span style="color:#f85149">&lt;nil&gt;</span> }
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3使用场景">3.使用场景</h3>
<p>​    JSON-RPC 2.0 的使用场景包括但不限于如下几个：</p>
<ul>
<li>Web 应用程序，客户端与服务器之间的异步通信，例如浏览器与后端服务交互。</li>
<li>微服务之间的通信，通过 JSON-RPC 调用其他微服务的接口。</li>
<li>物联网设备，设备与服务器之间的通信，由于 JSON-RPC 的轻量级特性，非常适合资源受限的设备。</li>
<li>移动应用，移动客户端与服务器之间的交互，减少数据传输量，提高响应速度。</li>
<li>区块链和加密货币，节点之间的通信或客户端与节点的交互，许多区块链系统（如以太坊）使用 JSON-RPC 进行接口调用。</li>
<li>远程过程调用（RPC）服务，替代传统的 SOAP 或 XML-RPC，提供简单的接口调用机制。</li>
</ul>
<h4 id="文档和版本控制">文档和版本控制</h4>
<p>​    良好的文档对于任何 API 都至关重要，尤其是像 JSON-RPC 2.0 这样依赖于明确的请求和响应格式的协议。</p>
<ul>
<li>编写清晰的 API 文档：详细描述每个方法的用途、参数、返回值和可能的错误情况。可以使用工具如 Swagger 或 Postman 来生成交互式的 API 文档。</li>
<li>保持文档更新：随着 API 的发展，确保文档始终保持最新状态，反映最新的变更和改进。</li>
<li>版本控制：为 API 引入版本控制，以便在不影响现有用户的情况下进行更新。可以在 URL 中或通过请求头指定 API 版本。</li>
</ul>
<h4 id="社区和支持">社区和支持</h4>
<p>​	JSON-RPC 2.0 是一个开放的标准，拥有活跃的社区和丰富的资源。参与社区讨论、阅读官方文档和技术博客、关注相关论坛和社交媒体，都可以帮助更快地解决问题，并获取最新的最佳实践。</p>
<p>​	此外，很多流行的编程语言和框架都有现成的 JSON-RPC 库，可以大大简化开发过程。选择一个成熟且维护良好的库，不仅可以节省时间，还能减少出错的可能性。</p>
<h3 id="4小结">4.小结</h3>
<p>​	JSON-RPC 2.0作为一种轻量级的 RPC 协议，提供了如标准化的错误处理、批量请求支持和通知机制等功能，具有简单、易用、跨语言等优点，适用于多种分布式系统场景。</p>
<h1 id="参考文章">参考文章</h1>
<ul>
<li><a href="https://mp.weixin.qq.com/s/P2uJlG21Y0C6bPn9mibSSA">https://mp.weixin.qq.com/s/P2uJlG21Y0C6bPn9mibSSA</a></li>
<li><a href="https://blog.csdn.net/luduoyuan/article/details/144861119">https://blog.csdn.net/luduoyuan/article/details/144861119</a></li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>
