<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>运维开发 on Luenci</title>
    <link>https://luenci.com/en/categories/%E8%BF%90%E7%BB%B4%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 运维开发 on Luenci</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <atom:link href="https://luenci.com/en/categories/%E8%BF%90%E7%BB%B4%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CMDB 介绍</title>
      <link>https://luenci.com/en/posts/cmdb%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://luenci.com/en/posts/cmdb%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h1 id=&#34;cmdb介绍&#34;&gt;CMDB介绍&lt;/h1&gt;
&lt;h2 id=&#34;cmdb含义&#34;&gt;CMDB含义&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;CMDB代表配置管理数据库，通常被称为任何ITSM系统的心脏。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://cdn.jsdelivr.net/gh/Lucareful/RepoImg/img/CMDB-Diagram-1030x539-1.png&#34; alt=&#34;CMDB 图&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;​	简而言之，CMDB是一个存储库，用于存储有关构成IT基础架构的组件的信息。 这些组件通常称为CI（可配置项）。 据ITIL称，CI是为交付IT服务而需要进行管理的任何资产。&lt;/p&gt;
&lt;p&gt;通常，CMDB包括CI的列表，它们的属性以及它们之间的关系。&lt;/p&gt;
&lt;p&gt;CMDB的&lt;strong&gt;核心功能之一是支持服务管理流程&lt;/strong&gt;，主要包括：事件，问题，变更，发布和资产管理。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="cmdb介绍">CMDB介绍</h1>
<h2 id="cmdb含义">CMDB含义</h2>
<blockquote>
<p>CMDB代表配置管理数据库，通常被称为任何ITSM系统的心脏。</p></blockquote>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Lucareful/RepoImg/img/CMDB-Diagram-1030x539-1.png" alt="CMDB 图"  />
</p>
<p>​	简而言之，CMDB是一个存储库，用于存储有关构成IT基础架构的组件的信息。 这些组件通常称为CI（可配置项）。 据ITIL称，CI是为交付IT服务而需要进行管理的任何资产。</p>
<p>通常，CMDB包括CI的列表，它们的属性以及它们之间的关系。</p>
<p>CMDB的<strong>核心功能之一是支持服务管理流程</strong>，主要包括：事件，问题，变更，发布和资产管理。</p>
<h3 id="cmdb如何工作">CMDB如何工作？</h3>
<blockquote>
<p>如前所述，CMDB是数据库。 它的独特之处在于它包含配置项的信息和关系，通常以列表的形式表示。</p></blockquote>
<ul>
<li>
<p>配置管理系统（CMS）负责管理此类CI所需的技术能力，该管理系统是可以具有多个CMDB的逻辑数据模型。</p>
</li>
<li>
<p>在组织中，通常发现CMDB是 <a href="https://www.motadata.com/zh-CN/itsm-software/">ITSM解决方案</a>，为资产和配置管理提供支持。</p>
</li>
<li>
<p>CMDB提供了查看和使用资产和可配置项目的通用场所。 该信息通常与其他ITSM流程（事件，问题和变更）结合使用，以创建有意义的关系。</p>
</li>
<li>
<p>使用发现和导出工具填充CMDB中的数据。 在Motadata ServiceOps ITSM平台中，我们支持无代理和基于代理的发现以填充CMDB。</p>
</li>
<li>
<p>由于数据量巨大，以行的形式，很少有人直接访问CMDB。 在Motadata ServiceOps ITSM中，用户可以使用报告模块将其CMDB数据有意义地组织到报告中。</p>
</li>
</ul>
<h2 id="cmdb用处">CMDB用处</h2>
<h4 id="cmdb是所有it资产的参考点">CMDB是所有IT资产的参考点</h4>
<ul>
<li><strong>CMDB是所有硬件和软件资产的中央数据库</strong></li>
</ul>
<h4 id="cmdb允许跟踪it基础架构中的更改">CMDB允许跟踪IT基础架构中的更改</h4>
<ul>
<li>如前所述，CMDB 通常作为 ITSM 解决方案的一部分存在。 在 Motadata ServiceOps ITSM 中，变更管理与 CMDB 紧密集成，允许使用变更模型跟踪变更。</li>
</ul>
<h4 id="cmdb允许跟踪it基础架构中的更改-1">CMDB允许跟踪IT基础架构中的更改</h4>
<ul>
<li>如前所述，CMDB 通常作为 ITSM 解决方案的一部分存在。 在 Motadata ServiceOps ITSM 中，变更管理与 CMDB 紧密集成，允许使用变更模型跟踪变更。</li>
</ul>
<h4 id="cmdb有助于知识管理过程">CMDB有助于知识管理过程</h4>
<p>强大的知识管理需要高质量的数据输入。 使用适当的CMDB，可以在知识库中建立大量解决方案，因为：</p>
<ul>
<li>CMDB具有外来资产与事件，问题和变更管理的关系记录，允许对任何问题进行根本原因分析。</li>
<li>它维护对资产所做的所有更改的日志，以使技术人员能够识别不良更改。</li>
<li>CMDB保存资产的属性详细信息，使技术人员可以方便地访问它们。</li>
</ul>
<h4 id="cmdb有助于itsm流程">CMDB有助于ITSM流程</h4>
<ul>
<li>当针对资产创建故障单时，通常将其与CMDB中的CI记录相关联。 该协会通过问题和变更管理继续发挥着至关重要的作用。</li>
</ul>
<h2 id="cmdb与资产管理">CMDB与资产管理</h2>
<p><img loading="lazy" src="https://cdn.jsdelivr.net/gh/Lucareful/RepoImg/img/CMDB-vs.-Asset-Management-966x1030-1.png" alt="CMDB 与资产管理"  />
</p>
<p>​	谈论CMDB和资产管理引起了很多混乱，因为这两个术语在概念上是相关的。 但是有明显的区别。</p>
<ul>
<li>
<p>当资产在IT环境中处于活动状态时，CMDB专注于用于管理资产的信息。 它涉及识别资产的组成，用途以及与其他资产的关联方式。</p>
</li>
<li>
<p>资产管理是一组过程，例如采购管理，硬件资产管理，软件许可证管理，合同管理等，用于管理从采购到报废的资产的整个生命周期。</p>
</li>
<li>
<p>CMDB与资产管理之间的主要区别在于，CMDB将资产包括为配置项（CI），而在资产管理中，资产是对企业具有潜在财务价值的单个元素。</p>
</li>
<li>
<p>CMDB的目的是对组织中的所有IT资产有一个全面而正确的视图。 这使组织可以在一个地方管理所有资产，而不必分别处理每个资产。 这使CMDB成为建立有效资产管理策略的重要工具。</p>
</li>
</ul>
<h2 id="cmdb管理信息的分类">CMDB管理信息的分类</h2>
<ul>
<li><strong>固定信息</strong> 很多数据都可以通过一些程序，或者是自动化的手段进行自动的录入，几乎是不会变的，但需要有一个比较好的规范，比如像机房或者交换机这样一些信息，自动化工具是抽取不出来的，所以我们采用了一个变通的方法，统一交换机的命名规范，统一采用机房+机柜的命名规范，然后通过脚本抓包的方式把网络结构还原出来。如果主机也是基于这样的规范命名的话，甚至还可以把机柜还原出来。</li>
<li>可变信息
<ul>
<li>人员信息：包括像联系方式的等信息，主要是为监控系统提供相应的数据；</li>
<li>状态信息：包括资源上线状况、下线状况，主要是为自动化上线提供相应的信息；</li>
<li>环境信息：包括生产环境还是测试的环境，主要是为监控系统及自动化系统提供相应的信息；</li>
<li>项目信息：在跟一些业务系统做一对接时，项目信息是非常重要的，比如说业务系统需要知道某一个项目有哪一些IP都需要从这里面取数据，同时也是自动化系统的支撑，有了项目归属，服务器才知道应该去做哪些部署。</li>
</ul>
</li>
</ul>
<h2 id="cmdb的挑战">CMDB的挑战</h2>
<ul>
<li>来自各种来源的数据聚合以填充CMDB可能会非常昂贵。</li>
<li>由于CMDB是组织的一部分，并且组织倾向于发展和变化，因此使CMDB保持最新是一个挑战。</li>
<li>仅仅拥有数据是没有用的。 一个人必须获得意义。 这就是为什么CMDB通常与其他工具（如ITSM或独立的报告工具）结合使用的原因。 拥有多个工具会大大增加成本。 幸运的是，Motadata ServiceOps ITSM具有内置的报告工具，可用于分析CMDB。</li>
</ul>
<h2 id="cmdb的价值">CMDB的价值</h2>
<p>按照CMDB不同层来说：</p>
<ul>
<li>接口层的价值 支撑整个运维平台的建设，尽量做到自动化，中心化的管理。</li>
<li>展示层的价值 通过一个展示就很方便地知道我现在的物理服务器，虚拟机等的比例是多少，亦或者可以知道我们每个机柜的容量是多少，只要数据是准确的，有价值的，基于这些数据，我们就可以做出非常多的组合。</li>
</ul>
<p>按照通用的运维工作的价值维度来说：</p>
<ul>
<li>稳定 信息的维护越少人工干预，就越稳定。</li>
<li>效率 如果按照中心化的思路去做CMDB话，有很多信息就不需要多处变更了，从这个维度来说，也就提高了我们的效率，提高效率的同时也保证整个系统的稳定，因为人工操作难免都会出现一些问题的。</li>
<li>成本 我们可以根据CPU和内存去推算我的这个月这台服务器支出是多少，有了这些数据就可以得到每个月的机房支出，计算资源利用率。那么就可以很方便地进行。</li>
</ul>
<h2 id="涉及的工具">涉及的工具</h2>
<ul>
<li>Ansible</li>
</ul>
<p>​	简单的自动化IT工具。这个工具的目标有这么几项：自动化部署APP；自动化管理配置项；自动化的持续交互；自动化的（AWS）云服务管理。所有的这几个目标从本质上来说都是在一个台或者几台服务器上，执行一系列的命令而已。</p>
<ul>
<li>SALTSTACK</li>
</ul>
<p>​	一种全新的基础设施管理方式，部署轻松，在几分钟内可运行起来，扩展性好，很容易管理上万台服务器，速度够快，服务器之间秒级通讯。</p>
<p>底层采用动态的连接总线，使其可以用于编配，远程执行， 配置管理等等。</p>
<h1 id="参考链接">参考链接</h1>
<ul>
<li><a href="https://www.motadata.com/zh-CN/blog/what-is-cmdb/">💬1 - 什么是CMDB？ | 它为什么如此重要？ | 元数据 (motadata.com)</a></li>
<li><a href="https://maxwellyue.gitbooks.io/cmdb/content/devops/cmdb/cmdb-shi-shi-mo.html">CMDB是什么 · DevOps (gitbooks.io)</a></li>
</ul>]]></content:encoded>
    </item>
  </channel>
</rss>
